{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import axios from'axios';import{KeyUri,config}from\"../key\";import{toast}from'react-toastify';const initialState={selected_route:[],loading:false,hasError:false,current_route:null};export const routeSlice=createSlice({name:'route',initialState,reducers:{getroute:state=>{state.loading=true;},getAll_route_success:(state,_ref)=>{let{payload}=_ref;console.log(\"------------>\",payload);state.loading=false;state.selected_route=payload;},getCurrentSuccess:(state,_ref2)=>{let{payload}=_ref2;state.loading=false;state.current_route=payload;},get_route_Failure:state=>{state.loading=false;state.hasError=true;}}});export const{getroute,getAll_route_success,getCurrentSuccess,get_route_Failure}=routeSlice.actions;export const routeSelector=state=>state.route;export const fetchAllroute=()=>async dispatch=>{dispatch(getroute());const key='fetchAllroute';try{const{data}=await axios.get(KeyUri.BACKEND_URI+\"/get-all-routes\",config);console.log(data);dispatch(getAll_route_success(data));}catch(error){dispatch(get_route_Failure());}};export const createroute=values=>async dispatch=>{console.log('in redux received values',values);dispatch(getroute());const key='create';try{const{data}=await axios.post(KeyUri.BACKEND_URI+\"/createtestroute\",values);toast.success(data.msg,{position:\"top-center\",autoClose:2500,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});dispatch(fetchAllroute());window.location.reload();}catch({response}){toast.error(response.data.msg,{position:\"top-center\",autoClose:2500,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});dispatch(get_route_Failure());}};export const fetchoneroute=id=>async dispatch=>{dispatch(getroute());const key='fetchOneroute';try{const{data}=await axios.get(KeyUri.BACKEND_URI+\"/get-route/\".concat(id),config);dispatch(getCurrentSuccess(data));}catch(error){dispatch(get_route_Failure());}};export const updateroute=(values,id)=>async dispatch=>{const key='route';dispatch(getroute());try{const{data}=await axios.put(KeyUri.BACKEND_URI+\"/update-route/\".concat(id),values,config);toast.success(data.msg,{position:\"top-center\",autoClose:2500,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});dispatch(fetchAllroute());}catch({response}){// Show error message using Typography\ntoast.success(response.data.msg,{position:\"top-center\",autoClose:2500,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});dispatch(get_route_Failure());}};export const fetchoneroute_details=content=>async dispatch=>{dispatch(getroute());const key='fetchOneroute';try{console.log(\"here i am in redux i got triggered with data\",content);const{data}=await axios.post(KeyUri.BACKEND_URI+\"/get-route-details/\",content);console.log(\"data i got \",data);dispatch(getCurrentSuccess(data));}catch(error){dispatch(get_route_Failure());}};export const deleteroute=id=>async dispatch=>{dispatch(getroute());const key='create';try{const{data}=await axios.delete(KeyUri.BACKEND_URI+\"/delete-route/\".concat(id,\" \"),config);if(data&&data.msg){// Show success toast if 'msg' exists in the response\ntoast.success(data.msg,{position:\"top-center\",autoClose:2500,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});dispatch(fetchAllroute());}else{console.error(\"Unexpected response format:\",data);dispatch(get_route_Failure());}}catch(error){console.error(\"An error occurred:\",error);toast.error(\"An error occurred\",{position:\"top-center\",autoClose:2500,hideProgressBar:true,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined});dispatch(get_route_Failure());}};export default routeSlice.reducer;","map":{"version":3,"names":["createSlice","axios","KeyUri","config","toast","initialState","selected_route","loading","hasError","current_route","routeSlice","name","reducers","getroute","state","getAll_route_success","_ref","payload","console","log","getCurrentSuccess","_ref2","get_route_Failure","actions","routeSelector","route","fetchAllroute","dispatch","key","data","get","BACKEND_URI","error","createroute","values","post","success","msg","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","window","location","reload","response","fetchoneroute","id","concat","updateroute","put","fetchoneroute_details","content","deleteroute","delete","reducer"],"sources":["D:/VK Works/Cabservice/user_side/src/api/route.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios'\r\nimport { KeyUri, config } from \"../key\";\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n   \r\n    selected_route:[],\r\n    loading:false,\r\n    hasError:false,\r\n    current_route:null,\r\n}\r\n\r\n\r\nexport const routeSlice = createSlice({\r\n  name: 'route',\r\n  initialState,\r\n  reducers: {\r\n\r\n    getroute: state => {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAll_route_success: (state, {payload})  =>{\r\n      console.log(\"------------>\",payload)\r\n      state.loading = false\r\n      state.selected_route = payload\r\n    },\r\n\r\n\r\n    getCurrentSuccess: (state, {payload}) =>{\r\n        state.loading = false\r\n        state.current_route = payload \r\n    },\r\n\r\n    get_route_Failure: (state) => {\r\n      state.loading = false\r\n      state.hasError = true\r\n    },\r\n\r\n   \r\n    \r\n   \r\n\r\n  },\r\n})\r\n\r\n\r\nexport const { getroute ,getAll_route_success, getCurrentSuccess, get_route_Failure} = routeSlice.actions;\r\n\r\n\r\n\r\nexport const routeSelector = state => state.route;\r\n\r\n\r\n\r\n  export const fetchAllroute = () => async (dispatch) => {\r\n    dispatch(getroute());\r\n    const key = 'fetchAllroute';\r\n    try {\r\n      const { data } = await axios.get(KeyUri.BACKEND_URI + `/get-all-routes`,config); \r\n      console.log(data);\r\n      dispatch(getAll_route_success(data));\r\n    } catch (error) {\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\nexport const createroute = (values) => async (dispatch) => {\r\n\r\n  \r\nconsole.log('in redux received values', values);\r\n  dispatch(getroute());\r\n  const key = 'create'; \r\n  try {\r\n  const { data } = await axios.post(KeyUri.BACKEND_URI + `/createtestroute`,values);\r\n  toast.success (data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n      dispatch(fetchAllroute());\r\n      window.location.reload();\r\n    } catch ({ response }) {\r\n      toast.error (response.data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n\r\n  export const fetchoneroute = (id) => async (dispatch) => {\r\n    dispatch(getroute());\r\n    const key = 'fetchOneroute';\r\n    try {\r\n      const { data } = await axios.get(KeyUri.BACKEND_URI + `/get-route/${id}`,config);\r\n      dispatch(getCurrentSuccess(data));\r\n    } catch (error) {\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n  export const updateroute = (values, id) => async (dispatch) => {\r\n   \r\n    const key = 'route';\r\n    dispatch(getroute());\r\n  \r\n    try {\r\n      const { data } = await axios.put(KeyUri.BACKEND_URI + `/update-route/${id}`, values, config);\r\n     \r\n      toast.success (data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n    dispatch(fetchAllroute());\r\n    } catch ({ response }) {\r\n      // Show error message using Typography\r\n      toast.success (response.data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n  export const fetchoneroute_details = (content) => async (dispatch) => {\r\n    dispatch(getroute());\r\n    const key = 'fetchOneroute';\r\n    try {\r\n        console.log(\"here i am in redux i got triggered with data\", content)\r\n      \r\n        const { data } = await axios.post(KeyUri.BACKEND_URI + `/get-route-details/`,content);\r\n        console.log(\"data i got \", data)\r\n      dispatch(getCurrentSuccess(data));\r\n    } catch (error) {\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n  export const deleteroute = (id) => async (dispatch) => {\r\n   \r\n    dispatch(getroute());\r\n    const key = 'create';\r\n    try {\r\n      const { data } = await axios.delete(KeyUri.BACKEND_URI + `/delete-route/${id} `, config);\r\n      if (data && data.msg) {\r\n        // Show success toast if 'msg' exists in the response\r\n        toast.success(data.msg, {\r\n          position: \"top-center\",\r\n          autoClose: 2500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        dispatch(fetchAllroute());\r\n      } else {\r\n        console.error(\"Unexpected response format:\", data);\r\n        dispatch(get_route_Failure());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n      toast.error(\"An error occurred\", {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\nexport default routeSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}