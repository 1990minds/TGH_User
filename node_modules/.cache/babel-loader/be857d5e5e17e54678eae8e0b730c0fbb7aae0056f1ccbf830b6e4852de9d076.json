{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { KeyUri, config } from \"../key\";\nimport { toast } from 'react-toastify';\nconst initialState = {\n  selected_route: [],\n  loading: false,\n  hasError: false,\n  current_route: null\n};\nexport const routeSlice = createSlice({\n  name: 'route',\n  initialState,\n  reducers: {\n    getroute: state => {\n      state.loading = true;\n    },\n    getAll_route_success: (state, {\n      payload\n    }) => {\n      console.log(\"------------>\", payload);\n      state.loading = false;\n      state.selected_route = payload;\n    },\n    getCurrentSuccess: (state, {\n      payload\n    }) => {\n      state.loading = false;\n      state.current_route = payload;\n    },\n    get_route_Failure: state => {\n      state.loading = false;\n      state.hasError = true;\n    }\n  }\n});\nexport const {\n  getroute,\n  getAll_route_success,\n  getCurrentSuccess,\n  get_route_Failure\n} = routeSlice.actions;\nexport const routeSelector = state => state.route;\nexport const fetchAllroute = () => async dispatch => {\n  dispatch(getroute());\n  const key = 'fetchAllroute';\n  try {\n    const {\n      data\n    } = await axios.get(KeyUri.BACKEND_URI + `/get-all-routes`, config);\n    console.log(data);\n    dispatch(getAll_route_success(data));\n  } catch (error) {\n    dispatch(get_route_Failure());\n  }\n};\nexport const createroute = values => async dispatch => {\n  console.log('in redux received values', values);\n  dispatch(getroute());\n  const key = 'create';\n  try {\n    const {\n      data\n    } = await axios.post(KeyUri.BACKEND_URI + `/createtestroute`, values);\n    toast.success(data.msg, {\n      position: \"top-center\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    dispatch(fetchAllroute());\n    window.location.reload();\n  } catch ({\n    response\n  }) {\n    toast.error(response.data.msg, {\n      position: \"top-center\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    dispatch(get_route_Failure());\n  }\n};\nexport const fetchoneroute = id => async dispatch => {\n  dispatch(getroute());\n  const key = 'fetchOneroute';\n  try {\n    const {\n      data\n    } = await axios.get(KeyUri.BACKEND_URI + `/get-route/${id}`, config);\n    dispatch(getCurrentSuccess(data));\n  } catch (error) {\n    dispatch(get_route_Failure());\n  }\n};\nexport const updateroute = (values, id) => async dispatch => {\n  const key = 'route';\n  dispatch(getroute());\n  try {\n    const {\n      data\n    } = await axios.put(KeyUri.BACKEND_URI + `/update-route/${id}`, values, config);\n    toast.success(data.msg, {\n      position: \"top-center\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    dispatch(fetchAllroute());\n  } catch ({\n    response\n  }) {\n    // Show error message using Typography\n    toast.success(response.data.msg, {\n      position: \"top-center\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    dispatch(get_route_Failure());\n  }\n};\nexport const fetchoneroute_details = data => async dispatch => {\n  dispatch(getroute());\n  const key = 'fetchOneroute';\n  try {\n    const {\n      data\n    } = await axios.gety(KeyUri.BACKEND_URI + `/get-route/`, data);\n    dispatch(getCurrentSuccess(data));\n  } catch (error) {\n    dispatch(get_route_Failure());\n  }\n};\nexport const deleteroute = id => async dispatch => {\n  dispatch(getroute());\n  const key = 'create';\n  try {\n    const {\n      data\n    } = await axios.delete(KeyUri.BACKEND_URI + `/delete-route/${id} `, config);\n    if (data && data.msg) {\n      // Show success toast if 'msg' exists in the response\n      toast.success(data.msg, {\n        position: \"top-center\",\n        autoClose: 2500,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      dispatch(fetchAllroute());\n    } else {\n      console.error(\"Unexpected response format:\", data);\n      dispatch(get_route_Failure());\n    }\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    toast.error(\"An error occurred\", {\n      position: \"top-center\",\n      autoClose: 2500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n    dispatch(get_route_Failure());\n  }\n};\nexport default routeSlice.reducer;","map":{"version":3,"names":["createSlice","axios","KeyUri","config","toast","initialState","selected_route","loading","hasError","current_route","routeSlice","name","reducers","getroute","state","getAll_route_success","payload","console","log","getCurrentSuccess","get_route_Failure","actions","routeSelector","route","fetchAllroute","dispatch","key","data","get","BACKEND_URI","error","createroute","values","post","success","msg","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","window","location","reload","response","fetchoneroute","id","updateroute","put","fetchoneroute_details","gety","deleteroute","delete","reducer"],"sources":["D:/VK Works/Cabservice/user_side/src/api/route.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios'\r\nimport { KeyUri, config } from \"../key\";\r\nimport { toast } from 'react-toastify'\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n   \r\n    selected_route:[],\r\n    loading:false,\r\n    hasError:false,\r\n    current_route:null,\r\n}\r\n\r\n\r\nexport const routeSlice = createSlice({\r\n  name: 'route',\r\n  initialState,\r\n  reducers: {\r\n\r\n    getroute: state => {\r\n      state.loading = true;\r\n    },\r\n\r\n    getAll_route_success: (state, {payload})  =>{\r\n      console.log(\"------------>\",payload)\r\n      state.loading = false\r\n      state.selected_route = payload\r\n    },\r\n\r\n\r\n    getCurrentSuccess: (state, {payload}) =>{\r\n        state.loading = false\r\n        state.current_route = payload \r\n    },\r\n\r\n    get_route_Failure: (state) => {\r\n      state.loading = false\r\n      state.hasError = true\r\n    },\r\n\r\n   \r\n    \r\n   \r\n\r\n  },\r\n})\r\n\r\n\r\nexport const { getroute ,getAll_route_success, getCurrentSuccess, get_route_Failure} = routeSlice.actions;\r\n\r\n\r\n\r\nexport const routeSelector = state => state.route;\r\n\r\n\r\n\r\n  export const fetchAllroute = () => async (dispatch) => {\r\n    dispatch(getroute());\r\n    const key = 'fetchAllroute';\r\n    try {\r\n      const { data } = await axios.get(KeyUri.BACKEND_URI + `/get-all-routes`,config); \r\n      console.log(data);\r\n      dispatch(getAll_route_success(data));\r\n    } catch (error) {\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\nexport const createroute = (values) => async (dispatch) => {\r\n\r\n  \r\nconsole.log('in redux received values', values);\r\n  dispatch(getroute());\r\n  const key = 'create'; \r\n  try {\r\n  const { data } = await axios.post(KeyUri.BACKEND_URI + `/createtestroute`,values);\r\n  toast.success (data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n      dispatch(fetchAllroute());\r\n      window.location.reload();\r\n    } catch ({ response }) {\r\n      toast.error (response.data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n\r\n  export const fetchoneroute = (id) => async (dispatch) => {\r\n    dispatch(getroute());\r\n    const key = 'fetchOneroute';\r\n    try {\r\n      const { data } = await axios.get(KeyUri.BACKEND_URI + `/get-route/${id}`,config);\r\n      dispatch(getCurrentSuccess(data));\r\n    } catch (error) {\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n  export const updateroute = (values, id) => async (dispatch) => {\r\n   \r\n    const key = 'route';\r\n    dispatch(getroute());\r\n  \r\n    try {\r\n      const { data } = await axios.put(KeyUri.BACKEND_URI + `/update-route/${id}`, values, config);\r\n     \r\n      toast.success (data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n    dispatch(fetchAllroute());\r\n    } catch ({ response }) {\r\n      // Show error message using Typography\r\n      toast.success (response.data.msg, {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        \r\n    })\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n  export const fetchoneroute_details = (data) => async (dispatch) => {\r\n    dispatch(getroute());\r\n    const key = 'fetchOneroute';\r\n    try {\r\n      const { data } = await axios.gety(KeyUri.BACKEND_URI + `/get-route/`,data);\r\n      dispatch(getCurrentSuccess(data));\r\n    } catch (error) {\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n  export const deleteroute = (id) => async (dispatch) => {\r\n   \r\n    dispatch(getroute());\r\n    const key = 'create';\r\n    try {\r\n      const { data } = await axios.delete(KeyUri.BACKEND_URI + `/delete-route/${id} `, config);\r\n      if (data && data.msg) {\r\n        // Show success toast if 'msg' exists in the response\r\n        toast.success(data.msg, {\r\n          position: \"top-center\",\r\n          autoClose: 2500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n        dispatch(fetchAllroute());\r\n      } else {\r\n        console.error(\"Unexpected response format:\", data);\r\n        dispatch(get_route_Failure());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n      toast.error(\"An error occurred\", {\r\n        position: \"top-center\",\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      dispatch(get_route_Failure());\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\nexport default routeSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}