{"ast":null,"code":"var _jsxFileName = \"D:\\\\VK Works\\\\Cabservice\\\\user_side\\\\src\\\\Seats\\\\SeatList.jsx\",\n  _s = $RefreshSig$();\n// import React, { use, useEffect, useState } from 'react';\n// import { Link, useNavigate, useParams } from 'react-router-dom';\n// import SelectedCarDetails from './SelectedCarDetails';\n// import TripDetailsCard from '../Listpage/TripDetailsCard';\n// import Gwagon from '../../src/Images/Gwagon.jpg'\n// import axios from 'axios'\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchonevehicle, vehicleSelector } from '../api/vehicles';\n\n// const SeatList = () => {\n//   const [seats, setSeats] = useState([\n//     { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\n//     { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\n//     { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//   ]);\n\n//   const [passengers, setPassengers] = useState({});\n//   const [mainPassenger, setMainPassenger] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n//   const [error, setError] = useState(null); // State for error message\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch()\n//   const { vid } = useParams();\n//   const { current_vehicle } = useSelector(vehicleSelector)\n//   console.log(vid)\n\n//   useEffect(() => {\n//     const fetchVehicle = async () => {\n//       await dispatch(fetchonevehicle(vid));\n//     };\n\n//     fetchVehicle();\n//   }, [dispatch, vid]);\n\n//   const handlePayment = async () => {\n//     try {\n//       // Create an order on the backend\n//       const { data } = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\n//         amount: totalAmount * 100, // Amount in paise\n//       });\n\n//       // Initialize Razorpay\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n//         amount: data.amount,\n//         currency: data.currency,\n//         name: \"The Great Himalayas\",\n//         description: \"Test Transaction\",\n//         order_id: data.id, // Razorpay Order ID\n//         handler: async function (response) {\n//           alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\n\n//           // Optionally, verify the payment on the backend\n\n//           // Navigate to the confirmed page after successful payment\n//           navigate('/confirmed', { state: { paymentId: response.razorpay_payment_id } });\n//         },\n//         prefill: {\n//           name: \"\",\n//           email: \"\",\n//           contact: \"\",\n//         },\n//         theme: {\n//           color: \"#3399cc\",\n//         },\n//       };\n\n//       const rzp = new window.Razorpay(options);\n//       rzp.open();\n//     } catch (error) {\n//       console.error(\"Error in Razorpay payment:\", error);\n//     }\n//   };\n\n//   const handleSeatClick = (id) => {\n//     setSeats((prevSeats) =>\n//       prevSeats.map((seat) =>\n//         seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\n//       )\n//     );\n\n//     setPassengers((prevPassengers) => {\n//       const updatedPassengers = { ...prevPassengers };\n//       if (updatedPassengers[id]) {\n//         delete updatedPassengers[id];\n//       } else {\n//         updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\n//       }\n//       return updatedPassengers;\n//     });\n//   };\n\n//   const handleMainPassengerChange = (seatId) => {\n//     setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\n//     setPassengers((prevPassengers) => {\n//       const updatedPassengers = { ...prevPassengers };\n//       Object.keys(updatedPassengers).forEach((id) => {\n//         updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\n//       });\n//       return updatedPassengers;\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!mainPassenger) {\n//       setError(\"There Should be an One Main Passenger ! Please Fill.\");\n//       return;\n//     }\n\n//     setError(null);\n\n//     setShowModal(true);\n//   };\n\n//   const closeModal = () => {\n//     setShowModal(false);\n//     navigate('/Seats');\n//   };\n\n//   const selectedSeats = seats.filter((seat) => seat.isSelected);\n//   const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\n//   const total_seats = current_vehicle?.seats\n//   const booked_seats = current_vehicle?.booked_seats\n//   const difference = total_seats?.filter(item => !booked_seats?.includes(item))\n//     .concat(booked_seats?.filter(item => !total_seats?.includes(item)));\n//   const amount = (((parseFloat(current_vehicle?.price_per_trip?.$numberDecimal)) / (total_seats?.length)) + 300)\n\n//   return (\n//     <>\n//       <div className=\"mx-auto flex flex-col lg:flex-row gap-8 p-4 w-full max-w-7xl\">\n\n//         <div className=\"w-full lg:w-2/3 bg-white shadow-md rounded-lg overflow-hidden order-2 lg:order-1\">\n//           <div>\n//             <div\n//               key={current_vehicle._id}\n//               className=\"bg-white rounded-lg shadow-md p-4 mb-4 flex flex-col lg:flex-row gap-4\"\n//             >\n//               <img\n//                 src={Gwagon}\n//                 alt={current_vehicle?.brand_and_model_name}\n//                 className=\"w-full lg:w-1/3 object-cover rounded-lg\"\n//               />\n//               <div className=\"flex flex-col lg:flex-row justify-between w-full\">\n//                 <div className=\"flex-grow\">\n//                   <h3 className=\"text-xl font-bold\">{current_vehicle?.brand_and_model_name}</h3>\n//                   <p className=\"text-gray-900 mb-2\">{current_vehicle?.seats?.length} Seater</p>\n//                   <ul className=\"text-gray-700 text-sm mb-4\">\n//                     {current_vehicle?.features?.map((feature, index) => (\n//                       <li key={index}>• {feature}</li>\n//                     ))}\n//                   </ul>\n//                 </div>\n\n//                 <div className=\"flex flex-col items-center justify-center text-center\">\n//                   <h1 className=\"text-lg font-semibold\">{current_vehicle?.Date}</h1>\n//                   <h4 className=\"text-gray-600\">{current_vehicle?.time}</h4>\n//                 </div>\n//                 <div className=\"flex flex-col items-center justify-between text-center\">\n//                   <p className=\"text-gray-900 mt-5 font-bold\">Seats Left: {difference?.length}</p>\n//                   <p className=\"text-2xl sm:text-3xl font-bold text-blue-600\">₹{amount}/seat</p>\n\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"p-4\">\n//             <div className=\"w-full max-w-3xl mx-auto mt-10 order-2 lg:order-1\">\n//               <form onSubmit={handleSubmit} className=\"bg-gray-50 p-4 md:p-8 shadow-lg rounded-lg\">\n//                 <h2 className=\"text-xl md:text-2xl font-semibold text-center text-gray-900 mb-6\">Passenger Details</h2>\n\n//                 <div\n//                   className={`grid gap-6 ${selectedSeats.length === 1 ? \"grid-cols-1\" : \"grid-cols-1 md:grid-cols-2\"}`}\n//                 >\n//                   {Object.entries(passengers).map(([seatId, passenger], index) => (\n//                     <div key={seatId} className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat {seatId}</h3>\n\n//                       <div>\n//                         <label htmlFor={`name-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\n//                           Name\n//                         </label>\n//                         <input\n//                           type=\"text\"\n//                           id={`name-${seatId}`}\n//                           value={passenger.name}\n//                           onChange={(e) =>\n//                             setPassengers((prev) => ({\n//                               ...prev,\n//                               [seatId]: { ...prev[seatId], name: e.target.value },\n//                             }))\n//                           }\n//                           required\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                         />\n//                       </div>\n//                       <div>\n//                         <label className=\"flex items-center\">\n//                           <input\n//                             type=\"checkbox\"\n//                             checked={mainPassenger === seatId}\n//                             onChange={() => handleMainPassengerChange(seatId)}\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\"\n//                           />\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\n//                         </label>\n//                       </div>\n\n//                       {mainPassenger === seatId && (\n//                         <div className=\"space-y-4\">\n\n//                           <div className=\"flex flex-col sm:flex-row gap-4\">\n\n//                             <div className=\"flex-1\">\n//                               <label htmlFor={`email-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\n//                                 Email\n//                               </label>\n//                               <input\n//                                 type=\"email\"\n//                                 id={`email-${seatId}`}\n//                                 value={passenger.email}\n//                                 onChange={(e) =>\n//                                   setPassengers((prev) => ({\n//                                     ...prev,\n//                                     [seatId]: { ...prev[seatId], email: e.target.value },\n//                                   }))\n//                                 }\n//                                 required\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                               />\n//                             </div>\n\n//                             {/* Phone */}\n//                             <div className=\"flex-1\">\n//                               <label htmlFor={`phone-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\n//                                 Phone Number\n//                               </label>\n//                               <input\n//                                 type=\"tel\"\n//                                 id={`phone-${seatId}`}\n//                                 value={passenger.phone}\n//                                 onChange={(e) =>\n//                                   setPassengers((prev) => ({\n//                                     ...prev,\n//                                     [seatId]: { ...prev[seatId], phone: e.target.value },\n//                                   }))\n//                                 }\n//                                 required\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                               />\n//                             </div>\n//                           </div>\n//                         </div>\n//                       )}\n\n//                       {/* Gender Selection */}\n//                       <div>\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\n//                             <label key={gender} className=\"flex items-center\">\n//                               <input\n//                                 type=\"radio\"\n//                                 name={`gender-${seatId}`}\n//                                 value={gender}\n//                                 checked={passenger.gender === gender}\n//                                 onChange={(e) =>\n//                                   setPassengers((prev) => ({\n//                                     ...prev,\n//                                     [seatId]: { ...prev[seatId], gender: e.target.value },\n//                                   }))\n//                                 }\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\n//                               />\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\n//                             </label>\n//                           ))}\n//                         </div>\n//                         {passenger.gender === \"Other\" && (\n//                           <input\n//                             type=\"text\"\n//                             placeholder=\"Enter your gender\"\n//                             value={passenger.customGender || \"\"}\n//                             onChange={(e) =>\n//                               setPassengers((prev) => ({\n//                                 ...prev,\n//                                 [seatId]: { ...prev[seatId], customGender: e.target.value },\n//                               }))\n//                             }\n//                             className=\"mt-2 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                           />\n//                         )}\n//                       </div>\n\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 {/* Error Message */}\n//                 {error && <div className=\"text-red-500 text-center mt-4\">{error}</div>}\n\n//                 {/* No Seats Selected Message */}\n//                 {selectedSeats.length === 0 && (\n//                   <div className=\"bg-yellow-100 border-l-4 border-yellow-400 text-yellow-700 p-3 rounded-lg shadow-md mt-4\">\n//                     <p className=\"font-semibold text-center text-lg mb-2\">No seats selected!</p>\n//                     <p className=\"text-center text-sm mb-3\">Please select seats for the trip before proceeding.</p>\n//                     <div className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat </h3>\n\n//                       {/* Passenger Name */}\n//                       <div>\n//                         <label className=\"block text-sm font-medium text-gray-700\">\n//                           Name\n//                         </label>\n//                         <input\n//                           type=\"text\"\n\n//                           disabled\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                         />\n//                       </div>\n//                       {/* Main Passenger Checkbox */}\n//                       <div>\n//                         <label className=\"flex items-center\">\n//                           <input\n//                             type=\"checkbox\"\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\" disabled\n//                           />\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\n//                         </label>\n//                       </div>\n\n//                       {/* Gender Selection */}\n//                       <div>\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\n//                             <label className=\"flex items-center\">\n//                               <input\n//                                 type=\"radio\"\n//                                 disabled\n//                                 value={gender}\n\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\n//                               />\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\n//                             </label>\n//                           ))}\n//                         </div>\n\n//                       </div>\n\n//                     </div>\n//                   </div>\n//                 )}\n\n//                 {/* Submit Button */}\n//                 <div className=\"text-center mt-8\">\n//                   <button\n//                     type=\"submit\"\n//                     disabled={selectedSeats.length === 0}\n//                     className={`px-6 py-3 text-sm font-medium rounded-md shadow ${selectedSeats.length === 0\n//                       ? \"bg-gray-200 text-gray-500 cursor-not-allowed\"\n//                       : \"bg-blue-600 text-white hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n//                       }`}\n//                   >\n//                     Book Seats\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"w-full lg:w-1/3 mt-8 lg:mt-0 order-1 lg:order-2\">\n//           <div className=\"w-full max-w-md mx-auto\">\n//             {console.log(\"remaining no of seats\", difference?.length)}\n//             <TripDetailsCard />\n//           </div>\n//           <div className=\"w-full max-w-md mx-auto bg-white shadow-md rounded-lg overflow-hidden mt-8\">\n//             <div className=\"bg-sky-100 px-4 py-2\">\n//               <h2 className=\"text-lg font-semibold\">Select Seats</h2>\n//               <h2>Hurry Up ! Only {difference?.length} seats Remaining</h2>\n//             </div>\n//             <div className=\"p-4\">\n//               <div className=\"grid grid-cols-2 gap-4\">\n//                 {seats.map((seat) => (\n//                   <div key={seat.id} className=\"flex flex-col items-center\">\n//                     <button\n//                       onClick={() => !seat.isDisabled && !seat.isBooked && handleSeatClick(seat.id)}\n//                       className={`h-12 w-12 rounded-md flex items-center justify-center text-lg font-semibold ${seat.isSelected\n//                         ? \"bg-blue-600 text-white\"\n//                         : seat.isBooked\n//                           ? \"bg-red-600 text-white\"\n//                           : \"bg-white text-blue-600 border-2 border-blue-600\"\n//                         } ${seat.isDisabled || seat.isBooked\n//                           ? \"opacity-50 cursor-not-allowed\"\n//                           : \"hover:bg-blue-100\"\n//                         }`}\n//                       disabled={seat.isDisabled || seat.isBooked}\n//                     >\n//                       {seat.id}\n//                     </button>\n//                     {!seat.isBooked && !seat.isDisabled && (\n//                       <span className=\"mt-2 text-sm text-gray-600\">Rs. {seat.price}</span>\n//                     )}\n//                   </div>\n//                 ))}\n//               </div>\n\n//             </div>\n//           </div>\n//         </div>\n\n//         {showModal && (\n//           <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n//             <div className=\"bg-white w-full max-w-3xl rounded-xl shadow-2xl p-4 sm:p-8 relative animate-fade-in overflow-y-auto max-h-[90vh]\">\n\n//               <button\n//                 onClick={closeModal}\n//                 className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\n//               >\n//                 &times;\n//               </button>\n\n//               <h3 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">Booking Details</h3>\n\n//               {mainPassenger && passengers[mainPassenger] && (\n//                 <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\n//                   <h4 className=\"text-lg sm:text-xl font-semibold text-gray-700 mb-3\">Main Passenger Details</h4>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Name:</span> {passengers[mainPassenger].name}\n//                   </p>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Gender:</span>{\" \"}\n//                     {passengers[mainPassenger].gender === \"Other\"\n//                       ? passengers[mainPassenger].customGender\n//                       : passengers[mainPassenger].gender}\n//                   </p>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Email:</span> {passengers[mainPassenger].email}\n//                   </p>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Phone:</span> {passengers[mainPassenger].phone}\n//                   </p>\n//                 </div>\n//               )}\n\n//               {Object.entries(passengers)\n//                 .filter(([seatId]) => seatId !== mainPassenger)\n//                 .map(([seatId, passenger]) => (\n//                   <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\n//                     <h4 className=\"text-md sm:text-lg font-semibold text-gray-700 mb-2\">Passenger for Seat {seatId}</h4>\n//                     <p className=\"text-gray-600\">\n//                       <span className=\"font-semibold\">Name:</span> {passenger.name || \"N/A\"}\n//                     </p>\n//                     <p className=\"text-gray-600\">\n//                       <span className=\"font-semibold\">Gender:</span>{\" \"}\n//                       {passenger.gender === \"Other\" ? passenger.customGender : passenger.gender}\n//                     </p>\n//                   </div>\n//                 ))}\n\n//               <div className=\"space-y-3\">\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">From Location:</span> Delhi\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">To Location:</span> Mumbai\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Drop Location:</span> Andheri West\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Date of Trip:</span> {new Date().toLocaleDateString()}\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Seats Booked:</span> {selectedSeats.map((seat) => seat.id).join(\", \")}\n//                 </p>\n//                 <p className=\"text-gray-600 text-lg font-medium\">\n//                   <span className=\"font-semibold\">Total Amount :</span> Rs. {totalAmount}\n//                 </p>\n//               </div>\n\n//               <div className=\"flex justify-center mt-6\">\n//                 <button\n//                   onClick={handlePayment}\n//                   className=\"py-2 px-4 bg-blue-600 text-white text-base font-medium rounded-md shadow hover:bg-blue-700 transition duration-300\"\n//                 >\n//                   <Link to=\"/sharedcabbookingconfirmed\">Pay Now</Link>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default SeatList;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { fetchonevehicle, vehicleSelector } from '../api/vehicles';\nimport TripDetailsCard from '../Listpage/TripDetailsCard';\nimport Gwagon from '../../src/Images/Gwagon.jpg';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SeatList = () => {\n  _s();\n  var _current_vehicle$seat2, _current_vehicle$pric2, _current_vehicle$seat3;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    vid\n  } = useParams();\n  const {\n    current_vehicle\n  } = useSelector(vehicleSelector);\n  const [seats, setSeats] = useState([]);\n  const [passengers, setPassengers] = useState({});\n  const [mainPassenger, setMainPassenger] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchVehicle = async () => {\n      try {\n        await dispatch(fetchonevehicle(vid));\n        setLoading(false);\n      } catch (error) {\n        setError(\"Failed to load vehicle details\");\n        setLoading(false);\n      }\n    };\n    fetchVehicle();\n  }, [dispatch, vid]);\n  useEffect(() => {\n    if (current_vehicle) {\n      var _current_vehicle$pric, _current_vehicle$seat;\n      const pricePerTrip = parseFloat(((_current_vehicle$pric = current_vehicle.price_per_trip) === null || _current_vehicle$pric === void 0 ? void 0 : _current_vehicle$pric.$numberDecimal) || 0);\n      const seatCount = ((_current_vehicle$seat = current_vehicle.seats) === null || _current_vehicle$seat === void 0 ? void 0 : _current_vehicle$seat.length) || 1;\n      const seatPrice = pricePerTrip / seatCount + 300;\n      const generatedSeats = (current_vehicle.seats || []).map(seatId => ({\n        id: seatId,\n        isSelected: false,\n        isBooked: (current_vehicle.booked_seats || []).includes(seatId),\n        price: seatPrice\n      }));\n      setSeats(generatedSeats);\n    }\n  }, [current_vehicle]);\n  const handleSeatClick = id => {\n    var _seats$find;\n    if ((_seats$find = seats.find(s => s.id === id)) !== null && _seats$find !== void 0 && _seats$find.isBooked) return;\n    setSeats(prev => prev.map(seat => seat.id === id ? {\n      ...seat,\n      isSelected: !seat.isSelected\n    } : seat));\n    setPassengers(prev => {\n      const updated = {\n        ...prev\n      };\n      if (updated[id]) delete updated[id];else updated[id] = {\n        name: '',\n        email: '',\n        phone: '',\n        gender: ''\n      };\n      return updated;\n    });\n  };\n  const handlePayment = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\n        amount: totalAmount * 100\n      });\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: data.amount,\n        currency: data.currency,\n        name: \"The Great Himalayas\",\n        order_id: data.id,\n        handler: response => {\n          navigate('/confirmed', {\n            state: {\n              paymentId: response.razorpay_payment_id,\n              bookingDetails: {\n                passengers,\n                mainPassenger,\n                selectedSeats: selectedSeats.map(s => s.id),\n                totalAmount,\n                vehicle: current_vehicle\n              }\n            }\n          });\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n      new window.Razorpay(options).open();\n    } catch (error) {\n      console.error(\"Payment error:\", error);\n    }\n  };\n  const validateForm = () => {\n    if (selectedSeats.length === 0) return \"Please select at least one seat\";\n    if (!mainPassenger) return \"Please select a main passenger\";\n    const main = passengers[mainPassenger];\n    if (!(main !== null && main !== void 0 && main.name) || !(main !== null && main !== void 0 && main.email) || !(main !== null && main !== void 0 && main.phone)) return \"Main passenger details incomplete\";\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(main.email)) return \"Invalid email format\";\n    if (!/^\\d{10}$/.test(main.phone)) return \"Invalid phone number (must be 10 digits)\";\n    if (main.gender === 'Other' && !main.customGender) return \"Please specify gender for 'Other' selection\";\n    return null;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(passengers);\n    const error = validateForm();\n    if (error) return setError(error);\n    setError(null);\n    setShowModal(true);\n  };\n  const selectedSeats = seats.filter(s => s.isSelected);\n  const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 653,\n    columnNumber: 23\n  }, this);\n  if (!current_vehicle) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center py-8\",\n    children: \"Vehicle not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 654,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto flex flex-col lg:flex-row gap-8 p-4 max-w-7xl mb-14\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-2/3 space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg rounded-lg p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col lg:flex-row gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Gwagon,\n            alt: current_vehicle.brand_and_model_name,\n            className: \"w-full lg:w-1/3 object-cover rounded-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold\",\n              children: current_vehicle.brand_and_model_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600\",\n              children: [(_current_vehicle$seat2 = current_vehicle.seats) === null || _current_vehicle$seat2 === void 0 ? void 0 : _current_vehicle$seat2.length, \" Seater\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-lg font-semibold\",\n                children: [current_vehicle.Date, \" \\u2022 \", current_vehicle.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-blue-600 font-bold text-xl mt-2\",\n                children: [\"\\u20B9\", ((parseFloat((_current_vehicle$pric2 = current_vehicle.price_per_trip) === null || _current_vehicle$pric2 === void 0 ? void 0 : _current_vehicle$pric2.$numberDecimal) || 0) / ((_current_vehicle$seat3 = current_vehicle.seats) === null || _current_vehicle$seat3 === void 0 ? void 0 : _current_vehicle$seat3.length) + 300).toFixed(2), \"/seat\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"bg-gray-50 p-6 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-6\",\n          children: \"Passenger Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `grid gap-6 ${selectedSeats.length === 1 ? 'grid-cols-1' : 'grid-cols-1 md:grid-cols-2'}`,\n          children: Object.entries(passengers).map(([seatId, passenger]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-4 rounded-md shadow-sm border\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-4\",\n              children: [\"Seat \", seatId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: passenger.name,\n              onChange: e => setPassengers(prev => ({\n                ...prev,\n                [seatId]: {\n                  ...prev[seatId],\n                  name: e.target.value\n                }\n              })),\n              className: \"w-full mb-4 p-2 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: mainPassenger === seatId,\n                onChange: () => setMainPassenger(prev => prev === seatId ? null : seatId),\n                className: \"mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 19\n              }, this), \"Main Passenger\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), mainPassenger === seatId && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: passenger.email,\n                onChange: e => setPassengers(prev => ({\n                  ...prev,\n                  [seatId]: {\n                    ...prev[seatId],\n                    email: e.target.value\n                  }\n                })),\n                className: \"w-full mb-4 p-2 border rounded\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                placeholder: \"Phone\",\n                value: passenger.phone,\n                onChange: e => setPassengers(prev => ({\n                  ...prev,\n                  [seatId]: {\n                    ...prev[seatId],\n                    phone: e.target.value\n                  }\n                })),\n                className: \"w-full mb-4 p-2 border rounded\",\n                pattern: \"\\\\d{10}\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gender:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 19\n              }, this), ['Male', 'Female', 'Other'].map(gender => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `gender-${seatId}`,\n                  value: gender,\n                  checked: passenger.gender === gender,\n                  onChange: e => setPassengers(prev => ({\n                    ...prev,\n                    [seatId]: {\n                      ...prev[seatId],\n                      gender: e.target.value,\n                      customGender: e.target.value === 'Other' ? '' : undefined\n                    }\n                  })),\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 23\n                }, this), gender]\n              }, gender, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this)), passenger.gender === 'Other' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Specify Gender\",\n                value: passenger.customGender || '',\n                onChange: e => setPassengers(prev => ({\n                  ...prev,\n                  [seatId]: {\n                    ...prev[seatId],\n                    customGender: e.target.value\n                  }\n                })),\n                className: \"w-full p-2 border rounded mt-2\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this)]\n          }, seatId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: selectedSeats.length === 0,\n          className: `mt-6 w-full py-2 rounded font-semibold ${selectedSeats.length === 0 ? 'bg-gray-300 cursor-not-allowed' : 'bg-blue-600 text-white hover:bg-blue-700'}`,\n          children: \"Proceed to Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full lg:w-1/3 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(TripDetailsCard, {\n        vehicle: current_vehicle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg rounded-lg overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-100 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: [\"Available Seats (\", seats.filter(s => !s.isBooked).length, \" remaining)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 grid grid-cols-2 gap-4\",\n          children: seats.map(seat => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSeatClick(seat.id),\n            disabled: seat.isBooked,\n            className: `p-4 rounded text-center font-semibold ${seat.isSelected ? 'bg-blue-600 text-white' : seat.isBooked ? 'bg-red-500 text-white' : 'bg-gray-100 hover:bg-blue-100'}`,\n            children: [seat.id, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm mt-1\",\n              children: [\"\\u20B9\", seat.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 17\n            }, this)]\n          }, seat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg p-6 max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Confirm Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Amount:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 33\n          }, this), \" \\u20B9\", totalAmount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Selected Seats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 33\n          }, this), \" \", selectedSeats.map(s => s.id).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            className: \"px-4 py-2 border rounded\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePayment,\n            className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n            children: \"Confirm Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this);\n};\n_s(SeatList, \"X9nzpPIbIUW3zt1uE7x4oP2O+YA=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n_c = SeatList;\nexport default SeatList;\nvar _c;\n$RefreshReg$(_c, \"SeatList\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","axios","fetchonevehicle","vehicleSelector","TripDetailsCard","Gwagon","jsxDEV","_jsxDEV","Fragment","_Fragment","SeatList","_s","_current_vehicle$seat2","_current_vehicle$pric2","_current_vehicle$seat3","dispatch","navigate","vid","current_vehicle","seats","setSeats","passengers","setPassengers","mainPassenger","setMainPassenger","showModal","setShowModal","error","setError","loading","setLoading","fetchVehicle","_current_vehicle$pric","_current_vehicle$seat","pricePerTrip","parseFloat","price_per_trip","$numberDecimal","seatCount","length","seatPrice","generatedSeats","map","seatId","id","isSelected","isBooked","booked_seats","includes","price","handleSeatClick","_seats$find","find","s","prev","seat","updated","name","email","phone","gender","handlePayment","data","post","amount","totalAmount","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","currency","order_id","handler","response","state","paymentId","razorpay_payment_id","bookingDetails","selectedSeats","vehicle","theme","color","window","Razorpay","open","console","validateForm","main","test","customGender","handleSubmit","e","preventDefault","log","filter","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","brand_and_model_name","Date","time","toFixed","onSubmit","Object","entries","passenger","type","placeholder","value","onChange","target","required","checked","pattern","undefined","disabled","onClick","join","_c","$RefreshReg$"],"sources":["D:/VK Works/Cabservice/user_side/src/Seats/SeatList.jsx"],"sourcesContent":["// import React, { use, useEffect, useState } from 'react';\r\n// import { Link, useNavigate, useParams } from 'react-router-dom';\r\n// import SelectedCarDetails from './SelectedCarDetails';\r\n// import TripDetailsCard from '../Listpage/TripDetailsCard';\r\n// import Gwagon from '../../src/Images/Gwagon.jpg'\r\n// import axios from 'axios'\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { fetchonevehicle, vehicleSelector } from '../api/vehicles';\r\n\r\n// const SeatList = () => {\r\n//   const [seats, setSeats] = useState([\r\n//     { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\r\n//     { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\r\n//     { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//   ]);\r\n\r\n//   const [passengers, setPassengers] = useState({});\r\n//   const [mainPassenger, setMainPassenger] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [error, setError] = useState(null); // State for error message\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch()\r\n//   const { vid } = useParams();\r\n//   const { current_vehicle } = useSelector(vehicleSelector)\r\n//   console.log(vid)\r\n\r\n//   useEffect(() => {\r\n//     const fetchVehicle = async () => {\r\n//       await dispatch(fetchonevehicle(vid));\r\n//     };\r\n\r\n//     fetchVehicle();\r\n//   }, [dispatch, vid]);\r\n\r\n\r\n//   const handlePayment = async () => {\r\n//     try {\r\n//       // Create an order on the backend\r\n//       const { data } = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\r\n//         amount: totalAmount * 100, // Amount in paise\r\n//       });\r\n\r\n//       // Initialize Razorpay\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n//         amount: data.amount,\r\n//         currency: data.currency,\r\n//         name: \"The Great Himalayas\",\r\n//         description: \"Test Transaction\",\r\n//         order_id: data.id, // Razorpay Order ID\r\n//         handler: async function (response) {\r\n//           alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\r\n\r\n//           // Optionally, verify the payment on the backend\r\n\r\n//           // Navigate to the confirmed page after successful payment\r\n//           navigate('/confirmed', { state: { paymentId: response.razorpay_payment_id } });\r\n//         },\r\n//         prefill: {\r\n//           name: \"\",\r\n//           email: \"\",\r\n//           contact: \"\",\r\n//         },\r\n//         theme: {\r\n//           color: \"#3399cc\",\r\n//         },\r\n//       };\r\n\r\n//       const rzp = new window.Razorpay(options);\r\n//       rzp.open();\r\n//     } catch (error) {\r\n//       console.error(\"Error in Razorpay payment:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSeatClick = (id) => {\r\n//     setSeats((prevSeats) =>\r\n//       prevSeats.map((seat) =>\r\n//         seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\r\n//       )\r\n//     );\r\n\r\n//     setPassengers((prevPassengers) => {\r\n//       const updatedPassengers = { ...prevPassengers };\r\n//       if (updatedPassengers[id]) {\r\n//         delete updatedPassengers[id];\r\n//       } else {\r\n//         updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\r\n//       }\r\n//       return updatedPassengers;\r\n//     });\r\n//   };\r\n\r\n//   const handleMainPassengerChange = (seatId) => {\r\n//     setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\r\n//     setPassengers((prevPassengers) => {\r\n//       const updatedPassengers = { ...prevPassengers };\r\n//       Object.keys(updatedPassengers).forEach((id) => {\r\n//         updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\r\n//       });\r\n//       return updatedPassengers;\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!mainPassenger) {\r\n//       setError(\"There Should be an One Main Passenger ! Please Fill.\");\r\n//       return;\r\n//     }\r\n\r\n//     setError(null);\r\n\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setShowModal(false);\r\n//     navigate('/Seats');\r\n//   };\r\n\r\n//   const selectedSeats = seats.filter((seat) => seat.isSelected);\r\n//   const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\r\n//   const total_seats = current_vehicle?.seats\r\n//   const booked_seats = current_vehicle?.booked_seats\r\n//   const difference = total_seats?.filter(item => !booked_seats?.includes(item))\r\n//     .concat(booked_seats?.filter(item => !total_seats?.includes(item)));\r\n//   const amount = (((parseFloat(current_vehicle?.price_per_trip?.$numberDecimal)) / (total_seats?.length)) + 300)\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"mx-auto flex flex-col lg:flex-row gap-8 p-4 w-full max-w-7xl\">\r\n\r\n//         <div className=\"w-full lg:w-2/3 bg-white shadow-md rounded-lg overflow-hidden order-2 lg:order-1\">\r\n//           <div>\r\n//             <div\r\n//               key={current_vehicle._id}\r\n//               className=\"bg-white rounded-lg shadow-md p-4 mb-4 flex flex-col lg:flex-row gap-4\"\r\n//             >\r\n//               <img\r\n//                 src={Gwagon}\r\n//                 alt={current_vehicle?.brand_and_model_name}\r\n//                 className=\"w-full lg:w-1/3 object-cover rounded-lg\"\r\n//               />\r\n//               <div className=\"flex flex-col lg:flex-row justify-between w-full\">\r\n//                 <div className=\"flex-grow\">\r\n//                   <h3 className=\"text-xl font-bold\">{current_vehicle?.brand_and_model_name}</h3>\r\n//                   <p className=\"text-gray-900 mb-2\">{current_vehicle?.seats?.length} Seater</p>\r\n//                   <ul className=\"text-gray-700 text-sm mb-4\">\r\n//                     {current_vehicle?.features?.map((feature, index) => (\r\n//                       <li key={index}>• {feature}</li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n\r\n//                 <div className=\"flex flex-col items-center justify-center text-center\">\r\n//                   <h1 className=\"text-lg font-semibold\">{current_vehicle?.Date}</h1>\r\n//                   <h4 className=\"text-gray-600\">{current_vehicle?.time}</h4>\r\n//                 </div>\r\n//                 <div className=\"flex flex-col items-center justify-between text-center\">\r\n//                   <p className=\"text-gray-900 mt-5 font-bold\">Seats Left: {difference?.length}</p>\r\n//                   <p className=\"text-2xl sm:text-3xl font-bold text-blue-600\">₹{amount}/seat</p>\r\n\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"p-4\">\r\n//             <div className=\"w-full max-w-3xl mx-auto mt-10 order-2 lg:order-1\">\r\n//               <form onSubmit={handleSubmit} className=\"bg-gray-50 p-4 md:p-8 shadow-lg rounded-lg\">\r\n//                 <h2 className=\"text-xl md:text-2xl font-semibold text-center text-gray-900 mb-6\">Passenger Details</h2>\r\n\r\n\r\n//                 <div\r\n//                   className={`grid gap-6 ${selectedSeats.length === 1 ? \"grid-cols-1\" : \"grid-cols-1 md:grid-cols-2\"}`}\r\n//                 >\r\n//                   {Object.entries(passengers).map(([seatId, passenger], index) => (\r\n//                     <div key={seatId} className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\r\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat {seatId}</h3>\r\n\r\n\r\n//                       <div>\r\n//                         <label htmlFor={`name-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\r\n//                           Name\r\n//                         </label>\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           id={`name-${seatId}`}\r\n//                           value={passenger.name}\r\n//                           onChange={(e) =>\r\n//                             setPassengers((prev) => ({\r\n//                               ...prev,\r\n//                               [seatId]: { ...prev[seatId], name: e.target.value },\r\n//                             }))\r\n//                           }\r\n//                           required\r\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                         />\r\n//                       </div>\r\n//                       <div>\r\n//                         <label className=\"flex items-center\">\r\n//                           <input\r\n//                             type=\"checkbox\"\r\n//                             checked={mainPassenger === seatId}\r\n//                             onChange={() => handleMainPassengerChange(seatId)}\r\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\"\r\n//                           />\r\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\r\n//                         </label>\r\n//                       </div>\r\n\r\n//                       {mainPassenger === seatId && (\r\n//                         <div className=\"space-y-4\">\r\n\r\n//                           <div className=\"flex flex-col sm:flex-row gap-4\">\r\n\r\n//                             <div className=\"flex-1\">\r\n//                               <label htmlFor={`email-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Email\r\n//                               </label>\r\n//                               <input\r\n//                                 type=\"email\"\r\n//                                 id={`email-${seatId}`}\r\n//                                 value={passenger.email}\r\n//                                 onChange={(e) =>\r\n//                                   setPassengers((prev) => ({\r\n//                                     ...prev,\r\n//                                     [seatId]: { ...prev[seatId], email: e.target.value },\r\n//                                   }))\r\n//                                 }\r\n//                                 required\r\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                               />\r\n//                             </div>\r\n\r\n//                             {/* Phone */}\r\n//                             <div className=\"flex-1\">\r\n//                               <label htmlFor={`phone-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Phone Number\r\n//                               </label>\r\n//                               <input\r\n//                                 type=\"tel\"\r\n//                                 id={`phone-${seatId}`}\r\n//                                 value={passenger.phone}\r\n//                                 onChange={(e) =>\r\n//                                   setPassengers((prev) => ({\r\n//                                     ...prev,\r\n//                                     [seatId]: { ...prev[seatId], phone: e.target.value },\r\n//                                   }))\r\n//                                 }\r\n//                                 required\r\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                               />\r\n//                             </div>\r\n//                           </div>\r\n//                         </div>\r\n//                       )}\r\n\r\n//                       {/* Gender Selection */}\r\n//                       <div>\r\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\r\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\r\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\r\n//                             <label key={gender} className=\"flex items-center\">\r\n//                               <input\r\n//                                 type=\"radio\"\r\n//                                 name={`gender-${seatId}`}\r\n//                                 value={gender}\r\n//                                 checked={passenger.gender === gender}\r\n//                                 onChange={(e) =>\r\n//                                   setPassengers((prev) => ({\r\n//                                     ...prev,\r\n//                                     [seatId]: { ...prev[seatId], gender: e.target.value },\r\n//                                   }))\r\n//                                 }\r\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\r\n//                               />\r\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\r\n//                             </label>\r\n//                           ))}\r\n//                         </div>\r\n//                         {passenger.gender === \"Other\" && (\r\n//                           <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"Enter your gender\"\r\n//                             value={passenger.customGender || \"\"}\r\n//                             onChange={(e) =>\r\n//                               setPassengers((prev) => ({\r\n//                                 ...prev,\r\n//                                 [seatId]: { ...prev[seatId], customGender: e.target.value },\r\n//                               }))\r\n//                             }\r\n//                             className=\"mt-2 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                           />\r\n//                         )}\r\n//                       </div>\r\n\r\n\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 {/* Error Message */}\r\n//                 {error && <div className=\"text-red-500 text-center mt-4\">{error}</div>}\r\n\r\n//                 {/* No Seats Selected Message */}\r\n//                 {selectedSeats.length === 0 && (\r\n//                   <div className=\"bg-yellow-100 border-l-4 border-yellow-400 text-yellow-700 p-3 rounded-lg shadow-md mt-4\">\r\n//                     <p className=\"font-semibold text-center text-lg mb-2\">No seats selected!</p>\r\n//                     <p className=\"text-center text-sm mb-3\">Please select seats for the trip before proceeding.</p>\r\n//                     <div className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\r\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat </h3>\r\n\r\n//                       {/* Passenger Name */}\r\n//                       <div>\r\n//                         <label className=\"block text-sm font-medium text-gray-700\">\r\n//                           Name\r\n//                         </label>\r\n//                         <input\r\n//                           type=\"text\"\r\n\r\n//                           disabled\r\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                         />\r\n//                       </div>\r\n//                       {/* Main Passenger Checkbox */}\r\n//                       <div>\r\n//                         <label className=\"flex items-center\">\r\n//                           <input\r\n//                             type=\"checkbox\"\r\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\" disabled\r\n//                           />\r\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\r\n//                         </label>\r\n//                       </div>\r\n\r\n//                       {/* Gender Selection */}\r\n//                       <div>\r\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\r\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\r\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\r\n//                             <label className=\"flex items-center\">\r\n//                               <input\r\n//                                 type=\"radio\"\r\n//                                 disabled\r\n//                                 value={gender}\r\n\r\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\r\n//                               />\r\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\r\n//                             </label>\r\n//                           ))}\r\n//                         </div>\r\n\r\n//                       </div>\r\n\r\n\r\n\r\n\r\n\r\n//                     </div>\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 {/* Submit Button */}\r\n//                 <div className=\"text-center mt-8\">\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     disabled={selectedSeats.length === 0}\r\n//                     className={`px-6 py-3 text-sm font-medium rounded-md shadow ${selectedSeats.length === 0\r\n//                       ? \"bg-gray-200 text-gray-500 cursor-not-allowed\"\r\n//                       : \"bg-blue-600 text-white hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n//                       }`}\r\n//                   >\r\n//                     Book Seats\r\n//                   </button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n\r\n//         <div className=\"w-full lg:w-1/3 mt-8 lg:mt-0 order-1 lg:order-2\">\r\n//           <div className=\"w-full max-w-md mx-auto\">\r\n//             {console.log(\"remaining no of seats\", difference?.length)}\r\n//             <TripDetailsCard />\r\n//           </div>\r\n//           <div className=\"w-full max-w-md mx-auto bg-white shadow-md rounded-lg overflow-hidden mt-8\">\r\n//             <div className=\"bg-sky-100 px-4 py-2\">\r\n//               <h2 className=\"text-lg font-semibold\">Select Seats</h2>\r\n//               <h2>Hurry Up ! Only {difference?.length} seats Remaining</h2>\r\n//             </div>\r\n//             <div className=\"p-4\">\r\n//               <div className=\"grid grid-cols-2 gap-4\">\r\n//                 {seats.map((seat) => (\r\n//                   <div key={seat.id} className=\"flex flex-col items-center\">\r\n//                     <button\r\n//                       onClick={() => !seat.isDisabled && !seat.isBooked && handleSeatClick(seat.id)}\r\n//                       className={`h-12 w-12 rounded-md flex items-center justify-center text-lg font-semibold ${seat.isSelected\r\n//                         ? \"bg-blue-600 text-white\"\r\n//                         : seat.isBooked\r\n//                           ? \"bg-red-600 text-white\"\r\n//                           : \"bg-white text-blue-600 border-2 border-blue-600\"\r\n//                         } ${seat.isDisabled || seat.isBooked\r\n//                           ? \"opacity-50 cursor-not-allowed\"\r\n//                           : \"hover:bg-blue-100\"\r\n//                         }`}\r\n//                       disabled={seat.isDisabled || seat.isBooked}\r\n//                     >\r\n//                       {seat.id}\r\n//                     </button>\r\n//                     {!seat.isBooked && !seat.isDisabled && (\r\n//                       <span className=\"mt-2 text-sm text-gray-600\">Rs. {seat.price}</span>\r\n//                     )}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n\r\n//         {showModal && (\r\n//           <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n//             <div className=\"bg-white w-full max-w-3xl rounded-xl shadow-2xl p-4 sm:p-8 relative animate-fade-in overflow-y-auto max-h-[90vh]\">\r\n\r\n//               <button\r\n//                 onClick={closeModal}\r\n//                 className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\r\n//               >\r\n//                 &times;\r\n//               </button>\r\n\r\n//               <h3 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">Booking Details</h3>\r\n\r\n\r\n//               {mainPassenger && passengers[mainPassenger] && (\r\n//                 <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\r\n//                   <h4 className=\"text-lg sm:text-xl font-semibold text-gray-700 mb-3\">Main Passenger Details</h4>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Name:</span> {passengers[mainPassenger].name}\r\n//                   </p>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Gender:</span>{\" \"}\r\n//                     {passengers[mainPassenger].gender === \"Other\"\r\n//                       ? passengers[mainPassenger].customGender\r\n//                       : passengers[mainPassenger].gender}\r\n//                   </p>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Email:</span> {passengers[mainPassenger].email}\r\n//                   </p>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Phone:</span> {passengers[mainPassenger].phone}\r\n//                   </p>\r\n//                 </div>\r\n//               )}\r\n\r\n\r\n//               {Object.entries(passengers)\r\n//                 .filter(([seatId]) => seatId !== mainPassenger)\r\n//                 .map(([seatId, passenger]) => (\r\n//                   <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\r\n//                     <h4 className=\"text-md sm:text-lg font-semibold text-gray-700 mb-2\">Passenger for Seat {seatId}</h4>\r\n//                     <p className=\"text-gray-600\">\r\n//                       <span className=\"font-semibold\">Name:</span> {passenger.name || \"N/A\"}\r\n//                     </p>\r\n//                     <p className=\"text-gray-600\">\r\n//                       <span className=\"font-semibold\">Gender:</span>{\" \"}\r\n//                       {passenger.gender === \"Other\" ? passenger.customGender : passenger.gender}\r\n//                     </p>\r\n//                   </div>\r\n//                 ))}\r\n\r\n//               <div className=\"space-y-3\">\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">From Location:</span> Delhi\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">To Location:</span> Mumbai\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Drop Location:</span> Andheri West\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Date of Trip:</span> {new Date().toLocaleDateString()}\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Seats Booked:</span> {selectedSeats.map((seat) => seat.id).join(\", \")}\r\n//                 </p>\r\n//                 <p className=\"text-gray-600 text-lg font-medium\">\r\n//                   <span className=\"font-semibold\">Total Amount :</span> Rs. {totalAmount}\r\n//                 </p>\r\n//               </div>\r\n\r\n\r\n//               <div className=\"flex justify-center mt-6\">\r\n//                 <button\r\n//                   onClick={handlePayment}\r\n//                   className=\"py-2 px-4 bg-blue-600 text-white text-base font-medium rounded-md shadow hover:bg-blue-700 transition duration-300\"\r\n//                 >\r\n//                   <Link to=\"/sharedcabbookingconfirmed\">Pay Now</Link>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SeatList;\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { fetchonevehicle, vehicleSelector } from '../api/vehicles';\r\nimport TripDetailsCard from '../Listpage/TripDetailsCard';\r\nimport Gwagon from '../../src/Images/Gwagon.jpg';\r\n\r\nconst SeatList = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { vid } = useParams();\r\n  const { current_vehicle } = useSelector(vehicleSelector);\r\n  const [seats, setSeats] = useState([]);\r\n  const [passengers, setPassengers] = useState({});\r\n  const [mainPassenger, setMainPassenger] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchVehicle = async () => {\r\n      try {\r\n        await dispatch(fetchonevehicle(vid));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(\"Failed to load vehicle details\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchVehicle();\r\n  }, [dispatch, vid]);\r\n\r\n  useEffect(() => {\r\n    if (current_vehicle) {\r\n      const pricePerTrip = parseFloat(current_vehicle.price_per_trip?.$numberDecimal || 0);\r\n      const seatCount = current_vehicle.seats?.length || 1;\r\n      const seatPrice = (pricePerTrip / seatCount) + 300;\r\n\r\n      const generatedSeats = (current_vehicle.seats || []).map(seatId => ({\r\n        id: seatId,\r\n        isSelected: false,\r\n        isBooked: (current_vehicle.booked_seats || []).includes(seatId),\r\n        price: seatPrice,\r\n      }));\r\n\r\n      setSeats(generatedSeats);\r\n    }\r\n  }, [current_vehicle]);\r\n\r\n  const handleSeatClick = (id) => {\r\n    if (seats.find(s => s.id === id)?.isBooked) return;\r\n\r\n    setSeats(prev => prev.map(seat => \r\n      seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\r\n    ));\r\n\r\n    setPassengers(prev => {\r\n      const updated = { ...prev };\r\n      if (updated[id]) delete updated[id];\r\n      else updated[id] = { name: '', email: '', phone: '', gender: '' };\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\r\n        amount: totalAmount * 100,\r\n      });\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: data.amount,\r\n        currency: data.currency,\r\n        name: \"The Great Himalayas\",\r\n        order_id: data.id,\r\n        handler: (response) => {\r\n          navigate('/confirmed', {\r\n            state: {\r\n              paymentId: response.razorpay_payment_id,\r\n              bookingDetails: {\r\n                passengers,\r\n                mainPassenger,\r\n                selectedSeats: selectedSeats.map(s => s.id),\r\n                totalAmount,\r\n                vehicle: current_vehicle,\r\n              }\r\n            }\r\n          });\r\n        },\r\n        theme: { color: \"#3399cc\" },\r\n      };\r\n\r\n      new window.Razorpay(options).open();\r\n    } catch (error) {\r\n      console.error(\"Payment error:\", error);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (selectedSeats.length === 0) return \"Please select at least one seat\";\r\n    if (!mainPassenger) return \"Please select a main passenger\";\r\n    \r\n    const main = passengers[mainPassenger];\r\n    if (!main?.name || !main?.email || !main?.phone) \r\n      return \"Main passenger details incomplete\";\r\n    \r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(main.email))\r\n      return \"Invalid email format\";\r\n    \r\n    if (!/^\\d{10}$/.test(main.phone))\r\n      return \"Invalid phone number (must be 10 digits)\";\r\n\r\n    if (main.gender === 'Other' && !main.customGender)\r\n      return \"Please specify gender for 'Other' selection\";\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(passengers)\r\n    const error = validateForm();\r\n    if (error) return setError(error);\r\n    setError(null);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const selectedSeats = seats.filter(s => s.isSelected);\r\n  const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\r\n\r\n  if (loading) return <div className=\"text-center py-8\">Loading...</div>;\r\n  if (!current_vehicle) return <div className=\"text-center py-8\">Vehicle not found</div>;\r\n\r\n  return (\r\n    <div className=\"mx-auto flex flex-col lg:flex-row gap-8 p-4 max-w-7xl mb-14\">\r\n      {/* Left Column */}\r\n      <div className=\"w-full lg:w-2/3 space-y-8\">\r\n        <div className=\"bg-white shadow-lg rounded-lg p-4\">\r\n          <div className=\"flex flex-col lg:flex-row gap-4\">\r\n            <img\r\n              src={Gwagon}\r\n              alt={current_vehicle.brand_and_model_name}\r\n              className=\"w-full lg:w-1/3 object-cover rounded-lg\"\r\n            />\r\n            <div className=\"flex-grow\">\r\n              <h3 className=\"text-xl font-bold\">{current_vehicle.brand_and_model_name}</h3>\r\n              <p className=\"text-gray-600\">{current_vehicle.seats?.length} Seater</p>\r\n              <div className=\"mt-4\">\r\n                <p className=\"text-lg font-semibold\">\r\n                  {current_vehicle.Date} • {current_vehicle.time}\r\n                </p>\r\n                <p className=\"text-blue-600 font-bold text-xl mt-2\">\r\n                  ₹{((parseFloat(current_vehicle.price_per_trip?.$numberDecimal) || 0) / current_vehicle.seats?.length + 300).toFixed(2)}/seat\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Passenger Form */}\r\n        <form onSubmit={handleSubmit} className=\"bg-gray-50 p-6 rounded-lg shadow\">\r\n          <h2 className=\"text-2xl font-semibold mb-6\">Passenger Details</h2>\r\n          \r\n          {error && <div className=\"text-red-500 mb-4\">{error}</div>}\r\n\r\n          <div className={`grid gap-6 ${selectedSeats.length === 1 ? 'grid-cols-1' : 'grid-cols-1 md:grid-cols-2'}`}>\r\n            {Object.entries(passengers).map(([seatId, passenger]) => (\r\n              <div key={seatId} className=\"bg-white p-4 rounded-md shadow-sm border\">\r\n                <h3 className=\"text-lg font-medium mb-4\">Seat {seatId}</h3>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  value={passenger.name}\r\n                  onChange={e => setPassengers(prev => ({\r\n                    ...prev,\r\n                    [seatId]: { ...prev[seatId], name: e.target.value }\r\n                  }))}\r\n                  className=\"w-full mb-4 p-2 border rounded\"\r\n                  required\r\n                />\r\n\r\n                <label className=\"block mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={mainPassenger === seatId}\r\n                    onChange={() => setMainPassenger(prev => prev === seatId ? null : seatId)}\r\n                    className=\"mr-2\"\r\n                  />\r\n                  Main Passenger\r\n                </label>\r\n\r\n                {mainPassenger === seatId && (\r\n                  <>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={passenger.email}\r\n                      onChange={e => setPassengers(prev => ({\r\n                        ...prev,\r\n                        [seatId]: { ...prev[seatId], email: e.target.value }\r\n                      }))}\r\n                      className=\"w-full mb-4 p-2 border rounded\"\r\n                      required\r\n                    />\r\n                    <input\r\n                      type=\"tel\"\r\n                      placeholder=\"Phone\"\r\n                      value={passenger.phone}\r\n                      onChange={e => setPassengers(prev => ({\r\n                        ...prev,\r\n                        [seatId]: { ...prev[seatId], phone: e.target.value }\r\n                      }))}\r\n                      className=\"w-full mb-4 p-2 border rounded\"\r\n                      pattern=\"\\d{10}\"\r\n                      required\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                <div className=\"space-y-2\">\r\n                  <label>Gender:</label>\r\n                  {['Male', 'Female', 'Other'].map(gender => (\r\n                    <label key={gender} className=\"block\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name={`gender-${seatId}`}\r\n                        value={gender}\r\n                        checked={passenger.gender === gender}\r\n                        onChange={e => setPassengers(prev => ({\r\n                          ...prev,\r\n                          [seatId]: { \r\n                            ...prev[seatId], \r\n                            gender: e.target.value,\r\n                            customGender: e.target.value === 'Other' ? '' : undefined\r\n                          }\r\n                        }))}\r\n                        className=\"mr-2\"\r\n                      />\r\n                      {gender}\r\n                    </label>\r\n                  ))}\r\n                  {passenger.gender === 'Other' && (\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Specify Gender\"\r\n                      value={passenger.customGender || ''}\r\n                      onChange={e => setPassengers(prev => ({\r\n                        ...prev,\r\n                        [seatId]: { ...prev[seatId], customGender: e.target.value }\r\n                      }))}\r\n                      className=\"w-full p-2 border rounded mt-2\"\r\n                      required\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={selectedSeats.length === 0}\r\n            className={`mt-6 w-full py-2 rounded font-semibold ${\r\n              selectedSeats.length === 0 \r\n                ? 'bg-gray-300 cursor-not-allowed' \r\n                : 'bg-blue-600 text-white hover:bg-blue-700'\r\n            }`}\r\n          >\r\n            Proceed to Payment\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Right Column */}\r\n      <div className=\"w-full lg:w-1/3 space-y-6\">\r\n        <TripDetailsCard vehicle={current_vehicle} />\r\n        \r\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden\">\r\n          <div className=\"bg-blue-100 p-4\">\r\n            <h2 className=\"text-lg font-semibold\">\r\n              Available Seats ({seats.filter(s => !s.isBooked).length} remaining)\r\n            </h2>\r\n          </div>\r\n          <div className=\"p-4 grid grid-cols-2 gap-4\">\r\n            {seats.map(seat => (\r\n              <button\r\n                key={seat.id}\r\n                onClick={() => handleSeatClick(seat.id)}\r\n                disabled={seat.isBooked}\r\n                className={`p-4 rounded text-center font-semibold ${\r\n                  seat.isSelected ? 'bg-blue-600 text-white' :\r\n                  seat.isBooked ? 'bg-red-500 text-white' : 'bg-gray-100 hover:bg-blue-100'\r\n                }`}\r\n              >\r\n                {seat.id}\r\n                <div className=\"text-sm mt-1\">₹{seat.price.toFixed(2)}</div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Payment Modal */}\r\n      {showModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4\">\r\n          <div className=\"bg-white rounded-lg p-6 max-w-md w-full\">\r\n            <h3 className=\"text-xl font-bold mb-4\">Confirm Booking</h3>\r\n            <p className=\"mb-2\"><strong>Total Amount:</strong> ₹{totalAmount.toFixed(2)}</p>\r\n            <p className=\"mb-4\"><strong>Selected Seats:</strong> {selectedSeats.map(s => s.id).join(', ')}</p>\r\n            <div className=\"flex justify-end gap-4\">\r\n              <button\r\n                onClick={() => setShowModal(false)}\r\n                className=\"px-4 py-2 border rounded\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handlePayment}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n              >\r\n                Confirm Payment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeatList;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,S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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}