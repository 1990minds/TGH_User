{"ast":null,"code":"// import React, { use, useEffect, useState } from 'react';\n// import { Link, useNavigate, useParams } from 'react-router-dom';\n// import SelectedCarDetails from './SelectedCarDetails';\n// import TripDetailsCard from '../Listpage/TripDetailsCard';\n// import Gwagon from '../../src/Images/Gwagon.jpg'\n// import axios from 'axios'\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchonevehicle, vehicleSelector } from '../api/vehicles';\n\n// const SeatList = () => {\n//   const [seats, setSeats] = useState([\n//     { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\n//     { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//     { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\n//     { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\n//   ]);\n\n//   const [passengers, setPassengers] = useState({});\n//   const [mainPassenger, setMainPassenger] = useState(null);\n//   const [showModal, setShowModal] = useState(false);\n//   const [error, setError] = useState(null); // State for error message\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch()\n//   const { vid } = useParams();\n//   const { current_vehicle } = useSelector(vehicleSelector)\n//   console.log(vid)\n\n//   useEffect(() => {\n//     const fetchVehicle = async () => {\n//       await dispatch(fetchonevehicle(vid));\n//     };\n\n//     fetchVehicle();\n//   }, [dispatch, vid]);\n\n//   const handlePayment = async () => {\n//     try {\n//       // Create an order on the backend\n//       const { data } = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\n//         amount: totalAmount * 100, // Amount in paise\n//       });\n\n//       // Initialize Razorpay\n//       const options = {\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n//         amount: data.amount,\n//         currency: data.currency,\n//         name: \"The Great Himalayas\",\n//         description: \"Test Transaction\",\n//         order_id: data.id, // Razorpay Order ID\n//         handler: async function (response) {\n//           alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\n\n//           // Optionally, verify the payment on the backend\n\n//           // Navigate to the confirmed page after successful payment\n//           navigate('/confirmed', { state: { paymentId: response.razorpay_payment_id } });\n//         },\n//         prefill: {\n//           name: \"\",\n//           email: \"\",\n//           contact: \"\",\n//         },\n//         theme: {\n//           color: \"#3399cc\",\n//         },\n//       };\n\n//       const rzp = new window.Razorpay(options);\n//       rzp.open();\n//     } catch (error) {\n//       console.error(\"Error in Razorpay payment:\", error);\n//     }\n//   };\n\n//   const handleSeatClick = (id) => {\n//     setSeats((prevSeats) =>\n//       prevSeats.map((seat) =>\n//         seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\n//       )\n//     );\n\n//     setPassengers((prevPassengers) => {\n//       const updatedPassengers = { ...prevPassengers };\n//       if (updatedPassengers[id]) {\n//         delete updatedPassengers[id];\n//       } else {\n//         updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\n//       }\n//       return updatedPassengers;\n//     });\n//   };\n\n//   const handleMainPassengerChange = (seatId) => {\n//     setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\n//     setPassengers((prevPassengers) => {\n//       const updatedPassengers = { ...prevPassengers };\n//       Object.keys(updatedPassengers).forEach((id) => {\n//         updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\n//       });\n//       return updatedPassengers;\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!mainPassenger) {\n//       setError(\"There Should be an One Main Passenger ! Please Fill.\");\n//       return;\n//     }\n\n//     setError(null);\n\n//     setShowModal(true);\n//   };\n\n//   const closeModal = () => {\n//     setShowModal(false);\n//     navigate('/Seats');\n//   };\n\n//   const selectedSeats = seats.filter((seat) => seat.isSelected);\n//   const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\n//   const total_seats = current_vehicle?.seats\n//   const booked_seats = current_vehicle?.booked_seats\n//   const difference = total_seats?.filter(item => !booked_seats?.includes(item))\n//     .concat(booked_seats?.filter(item => !total_seats?.includes(item)));\n//   const amount = (((parseFloat(current_vehicle?.price_per_trip?.$numberDecimal)) / (total_seats?.length)) + 300)\n\n//   return (\n//     <>\n//       <div className=\"mx-auto flex flex-col lg:flex-row gap-8 p-4 w-full max-w-7xl\">\n\n//         <div className=\"w-full lg:w-2/3 bg-white shadow-md rounded-lg overflow-hidden order-2 lg:order-1\">\n//           <div>\n//             <div\n//               key={current_vehicle._id}\n//               className=\"bg-white rounded-lg shadow-md p-4 mb-4 flex flex-col lg:flex-row gap-4\"\n//             >\n//               <img\n//                 src={Gwagon}\n//                 alt={current_vehicle?.brand_and_model_name}\n//                 className=\"w-full lg:w-1/3 object-cover rounded-lg\"\n//               />\n//               <div className=\"flex flex-col lg:flex-row justify-between w-full\">\n//                 <div className=\"flex-grow\">\n//                   <h3 className=\"text-xl font-bold\">{current_vehicle?.brand_and_model_name}</h3>\n//                   <p className=\"text-gray-900 mb-2\">{current_vehicle?.seats?.length} Seater</p>\n//                   <ul className=\"text-gray-700 text-sm mb-4\">\n//                     {current_vehicle?.features?.map((feature, index) => (\n//                       <li key={index}>• {feature}</li>\n//                     ))}\n//                   </ul>\n//                 </div>\n\n//                 <div className=\"flex flex-col items-center justify-center text-center\">\n//                   <h1 className=\"text-lg font-semibold\">{current_vehicle?.Date}</h1>\n//                   <h4 className=\"text-gray-600\">{current_vehicle?.time}</h4>\n//                 </div>\n//                 <div className=\"flex flex-col items-center justify-between text-center\">\n//                   <p className=\"text-gray-900 mt-5 font-bold\">Seats Left: {difference?.length}</p>\n//                   <p className=\"text-2xl sm:text-3xl font-bold text-blue-600\">₹{amount}/seat</p>\n\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"p-4\">\n//             <div className=\"w-full max-w-3xl mx-auto mt-10 order-2 lg:order-1\">\n//               <form onSubmit={handleSubmit} className=\"bg-gray-50 p-4 md:p-8 shadow-lg rounded-lg\">\n//                 <h2 className=\"text-xl md:text-2xl font-semibold text-center text-gray-900 mb-6\">Passenger Details</h2>\n\n//                 <div\n//                   className={`grid gap-6 ${selectedSeats.length === 1 ? \"grid-cols-1\" : \"grid-cols-1 md:grid-cols-2\"}`}\n//                 >\n//                   {Object.entries(passengers).map(([seatId, passenger], index) => (\n//                     <div key={seatId} className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat {seatId}</h3>\n\n//                       <div>\n//                         <label htmlFor={`name-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\n//                           Name\n//                         </label>\n//                         <input\n//                           type=\"text\"\n//                           id={`name-${seatId}`}\n//                           value={passenger.name}\n//                           onChange={(e) =>\n//                             setPassengers((prev) => ({\n//                               ...prev,\n//                               [seatId]: { ...prev[seatId], name: e.target.value },\n//                             }))\n//                           }\n//                           required\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                         />\n//                       </div>\n//                       <div>\n//                         <label className=\"flex items-center\">\n//                           <input\n//                             type=\"checkbox\"\n//                             checked={mainPassenger === seatId}\n//                             onChange={() => handleMainPassengerChange(seatId)}\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\"\n//                           />\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\n//                         </label>\n//                       </div>\n\n//                       {mainPassenger === seatId && (\n//                         <div className=\"space-y-4\">\n\n//                           <div className=\"flex flex-col sm:flex-row gap-4\">\n\n//                             <div className=\"flex-1\">\n//                               <label htmlFor={`email-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\n//                                 Email\n//                               </label>\n//                               <input\n//                                 type=\"email\"\n//                                 id={`email-${seatId}`}\n//                                 value={passenger.email}\n//                                 onChange={(e) =>\n//                                   setPassengers((prev) => ({\n//                                     ...prev,\n//                                     [seatId]: { ...prev[seatId], email: e.target.value },\n//                                   }))\n//                                 }\n//                                 required\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                               />\n//                             </div>\n\n//                             {/* Phone */}\n//                             <div className=\"flex-1\">\n//                               <label htmlFor={`phone-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\n//                                 Phone Number\n//                               </label>\n//                               <input\n//                                 type=\"tel\"\n//                                 id={`phone-${seatId}`}\n//                                 value={passenger.phone}\n//                                 onChange={(e) =>\n//                                   setPassengers((prev) => ({\n//                                     ...prev,\n//                                     [seatId]: { ...prev[seatId], phone: e.target.value },\n//                                   }))\n//                                 }\n//                                 required\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                               />\n//                             </div>\n//                           </div>\n//                         </div>\n//                       )}\n\n//                       {/* Gender Selection */}\n//                       <div>\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\n//                             <label key={gender} className=\"flex items-center\">\n//                               <input\n//                                 type=\"radio\"\n//                                 name={`gender-${seatId}`}\n//                                 value={gender}\n//                                 checked={passenger.gender === gender}\n//                                 onChange={(e) =>\n//                                   setPassengers((prev) => ({\n//                                     ...prev,\n//                                     [seatId]: { ...prev[seatId], gender: e.target.value },\n//                                   }))\n//                                 }\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\n//                               />\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\n//                             </label>\n//                           ))}\n//                         </div>\n//                         {passenger.gender === \"Other\" && (\n//                           <input\n//                             type=\"text\"\n//                             placeholder=\"Enter your gender\"\n//                             value={passenger.customGender || \"\"}\n//                             onChange={(e) =>\n//                               setPassengers((prev) => ({\n//                                 ...prev,\n//                                 [seatId]: { ...prev[seatId], customGender: e.target.value },\n//                               }))\n//                             }\n//                             className=\"mt-2 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                           />\n//                         )}\n//                       </div>\n\n//                     </div>\n//                   ))}\n//                 </div>\n\n//                 {/* Error Message */}\n//                 {error && <div className=\"text-red-500 text-center mt-4\">{error}</div>}\n\n//                 {/* No Seats Selected Message */}\n//                 {selectedSeats.length === 0 && (\n//                   <div className=\"bg-yellow-100 border-l-4 border-yellow-400 text-yellow-700 p-3 rounded-lg shadow-md mt-4\">\n//                     <p className=\"font-semibold text-center text-lg mb-2\">No seats selected!</p>\n//                     <p className=\"text-center text-sm mb-3\">Please select seats for the trip before proceeding.</p>\n//                     <div className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat </h3>\n\n//                       {/* Passenger Name */}\n//                       <div>\n//                         <label className=\"block text-sm font-medium text-gray-700\">\n//                           Name\n//                         </label>\n//                         <input\n//                           type=\"text\"\n\n//                           disabled\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\n//                         />\n//                       </div>\n//                       {/* Main Passenger Checkbox */}\n//                       <div>\n//                         <label className=\"flex items-center\">\n//                           <input\n//                             type=\"checkbox\"\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\" disabled\n//                           />\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\n//                         </label>\n//                       </div>\n\n//                       {/* Gender Selection */}\n//                       <div>\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\n//                             <label className=\"flex items-center\">\n//                               <input\n//                                 type=\"radio\"\n//                                 disabled\n//                                 value={gender}\n\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\n//                               />\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\n//                             </label>\n//                           ))}\n//                         </div>\n\n//                       </div>\n\n//                     </div>\n//                   </div>\n//                 )}\n\n//                 {/* Submit Button */}\n//                 <div className=\"text-center mt-8\">\n//                   <button\n//                     type=\"submit\"\n//                     disabled={selectedSeats.length === 0}\n//                     className={`px-6 py-3 text-sm font-medium rounded-md shadow ${selectedSeats.length === 0\n//                       ? \"bg-gray-200 text-gray-500 cursor-not-allowed\"\n//                       : \"bg-blue-600 text-white hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n//                       }`}\n//                   >\n//                     Book Seats\n//                   </button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"w-full lg:w-1/3 mt-8 lg:mt-0 order-1 lg:order-2\">\n//           <div className=\"w-full max-w-md mx-auto\">\n//             {console.log(\"remaining no of seats\", difference?.length)}\n//             <TripDetailsCard />\n//           </div>\n//           <div className=\"w-full max-w-md mx-auto bg-white shadow-md rounded-lg overflow-hidden mt-8\">\n//             <div className=\"bg-sky-100 px-4 py-2\">\n//               <h2 className=\"text-lg font-semibold\">Select Seats</h2>\n//               <h2>Hurry Up ! Only {difference?.length} seats Remaining</h2>\n//             </div>\n//             <div className=\"p-4\">\n//               <div className=\"grid grid-cols-2 gap-4\">\n//                 {seats.map((seat) => (\n//                   <div key={seat.id} className=\"flex flex-col items-center\">\n//                     <button\n//                       onClick={() => !seat.isDisabled && !seat.isBooked && handleSeatClick(seat.id)}\n//                       className={`h-12 w-12 rounded-md flex items-center justify-center text-lg font-semibold ${seat.isSelected\n//                         ? \"bg-blue-600 text-white\"\n//                         : seat.isBooked\n//                           ? \"bg-red-600 text-white\"\n//                           : \"bg-white text-blue-600 border-2 border-blue-600\"\n//                         } ${seat.isDisabled || seat.isBooked\n//                           ? \"opacity-50 cursor-not-allowed\"\n//                           : \"hover:bg-blue-100\"\n//                         }`}\n//                       disabled={seat.isDisabled || seat.isBooked}\n//                     >\n//                       {seat.id}\n//                     </button>\n//                     {!seat.isBooked && !seat.isDisabled && (\n//                       <span className=\"mt-2 text-sm text-gray-600\">Rs. {seat.price}</span>\n//                     )}\n//                   </div>\n//                 ))}\n//               </div>\n\n//             </div>\n//           </div>\n//         </div>\n\n//         {showModal && (\n//           <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n//             <div className=\"bg-white w-full max-w-3xl rounded-xl shadow-2xl p-4 sm:p-8 relative animate-fade-in overflow-y-auto max-h-[90vh]\">\n\n//               <button\n//                 onClick={closeModal}\n//                 className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\n//               >\n//                 &times;\n//               </button>\n\n//               <h3 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">Booking Details</h3>\n\n//               {mainPassenger && passengers[mainPassenger] && (\n//                 <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\n//                   <h4 className=\"text-lg sm:text-xl font-semibold text-gray-700 mb-3\">Main Passenger Details</h4>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Name:</span> {passengers[mainPassenger].name}\n//                   </p>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Gender:</span>{\" \"}\n//                     {passengers[mainPassenger].gender === \"Other\"\n//                       ? passengers[mainPassenger].customGender\n//                       : passengers[mainPassenger].gender}\n//                   </p>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Email:</span> {passengers[mainPassenger].email}\n//                   </p>\n//                   <p className=\"text-gray-600\">\n//                     <span className=\"font-semibold\">Phone:</span> {passengers[mainPassenger].phone}\n//                   </p>\n//                 </div>\n//               )}\n\n//               {Object.entries(passengers)\n//                 .filter(([seatId]) => seatId !== mainPassenger)\n//                 .map(([seatId, passenger]) => (\n//                   <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\n//                     <h4 className=\"text-md sm:text-lg font-semibold text-gray-700 mb-2\">Passenger for Seat {seatId}</h4>\n//                     <p className=\"text-gray-600\">\n//                       <span className=\"font-semibold\">Name:</span> {passenger.name || \"N/A\"}\n//                     </p>\n//                     <p className=\"text-gray-600\">\n//                       <span className=\"font-semibold\">Gender:</span>{\" \"}\n//                       {passenger.gender === \"Other\" ? passenger.customGender : passenger.gender}\n//                     </p>\n//                   </div>\n//                 ))}\n\n//               <div className=\"space-y-3\">\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">From Location:</span> Delhi\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">To Location:</span> Mumbai\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Drop Location:</span> Andheri West\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Date of Trip:</span> {new Date().toLocaleDateString()}\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span className=\"font-semibold\">Seats Booked:</span> {selectedSeats.map((seat) => seat.id).join(\", \")}\n//                 </p>\n//                 <p className=\"text-gray-600 text-lg font-medium\">\n//                   <span className=\"font-semibold\">Total Amount :</span> Rs. {totalAmount}\n//                 </p>\n//               </div>\n\n//               <div className=\"flex justify-center mt-6\">\n//                 <button\n//                   onClick={handlePayment}\n//                   className=\"py-2 px-4 bg-blue-600 text-white text-base font-medium rounded-md shadow hover:bg-blue-700 transition duration-300\"\n//                 >\n//                   <Link to=\"/sharedcabbookingconfirmed\">Pay Now</Link>\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n\n// export default SeatList;","map":{"version":3,"names":[],"sources":["D:/VK Works/Cabservice/user_side/src/Seats/SeatList.jsx"],"sourcesContent":["// import React, { use, useEffect, useState } from 'react';\r\n// import { Link, useNavigate, useParams } from 'react-router-dom';\r\n// import SelectedCarDetails from './SelectedCarDetails';\r\n// import TripDetailsCard from '../Listpage/TripDetailsCard';\r\n// import Gwagon from '../../src/Images/Gwagon.jpg'\r\n// import axios from 'axios'\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { fetchonevehicle, vehicleSelector } from '../api/vehicles';\r\n\r\n// const SeatList = () => {\r\n//   const [seats, setSeats] = useState([\r\n//     { id: 'L1', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'R1', isSelected: false, isDisabled: true, isBooked: false, price: 1200 },\r\n//     { id: 'L2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'R2', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//     { id: 'L3', isSelected: false, isDisabled: false, isBooked: true, price: 1200 },\r\n//     { id: 'R3', isSelected: false, isDisabled: false, isBooked: false, price: 1200 },\r\n//   ]);\r\n\r\n//   const [passengers, setPassengers] = useState({});\r\n//   const [mainPassenger, setMainPassenger] = useState(null);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [error, setError] = useState(null); // State for error message\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch()\r\n//   const { vid } = useParams();\r\n//   const { current_vehicle } = useSelector(vehicleSelector)\r\n//   console.log(vid)\r\n\r\n//   useEffect(() => {\r\n//     const fetchVehicle = async () => {\r\n//       await dispatch(fetchonevehicle(vid));\r\n//     };\r\n\r\n//     fetchVehicle();\r\n//   }, [dispatch, vid]);\r\n\r\n\r\n//   const handlePayment = async () => {\r\n//     try {\r\n//       // Create an order on the backend\r\n//       const { data } = await axios.post(\"http://localhost:5000/api/payment/create-order\", {\r\n//         amount: totalAmount * 100, // Amount in paise\r\n//       });\r\n\r\n//       // Initialize Razorpay\r\n//       const options = {\r\n//         key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n//         amount: data.amount,\r\n//         currency: data.currency,\r\n//         name: \"The Great Himalayas\",\r\n//         description: \"Test Transaction\",\r\n//         order_id: data.id, // Razorpay Order ID\r\n//         handler: async function (response) {\r\n//           alert(`Payment Successful! Payment ID: ${response.razorpay_payment_id}`);\r\n\r\n//           // Optionally, verify the payment on the backend\r\n\r\n//           // Navigate to the confirmed page after successful payment\r\n//           navigate('/confirmed', { state: { paymentId: response.razorpay_payment_id } });\r\n//         },\r\n//         prefill: {\r\n//           name: \"\",\r\n//           email: \"\",\r\n//           contact: \"\",\r\n//         },\r\n//         theme: {\r\n//           color: \"#3399cc\",\r\n//         },\r\n//       };\r\n\r\n//       const rzp = new window.Razorpay(options);\r\n//       rzp.open();\r\n//     } catch (error) {\r\n//       console.error(\"Error in Razorpay payment:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSeatClick = (id) => {\r\n//     setSeats((prevSeats) =>\r\n//       prevSeats.map((seat) =>\r\n//         seat.id === id ? { ...seat, isSelected: !seat.isSelected } : seat\r\n//       )\r\n//     );\r\n\r\n//     setPassengers((prevPassengers) => {\r\n//       const updatedPassengers = { ...prevPassengers };\r\n//       if (updatedPassengers[id]) {\r\n//         delete updatedPassengers[id];\r\n//       } else {\r\n//         updatedPassengers[id] = { name: '', email: '', phone: '', isMain: false };\r\n//       }\r\n//       return updatedPassengers;\r\n//     });\r\n//   };\r\n\r\n//   const handleMainPassengerChange = (seatId) => {\r\n//     setMainPassenger((prevMain) => (prevMain === seatId ? null : seatId));\r\n//     setPassengers((prevPassengers) => {\r\n//       const updatedPassengers = { ...prevPassengers };\r\n//       Object.keys(updatedPassengers).forEach((id) => {\r\n//         updatedPassengers[id].isMain = id === seatId && seatId !== mainPassenger;\r\n//       });\r\n//       return updatedPassengers;\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (!mainPassenger) {\r\n//       setError(\"There Should be an One Main Passenger ! Please Fill.\");\r\n//       return;\r\n//     }\r\n\r\n//     setError(null);\r\n\r\n//     setShowModal(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setShowModal(false);\r\n//     navigate('/Seats');\r\n//   };\r\n\r\n//   const selectedSeats = seats.filter((seat) => seat.isSelected);\r\n//   const totalAmount = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);\r\n//   const total_seats = current_vehicle?.seats\r\n//   const booked_seats = current_vehicle?.booked_seats\r\n//   const difference = total_seats?.filter(item => !booked_seats?.includes(item))\r\n//     .concat(booked_seats?.filter(item => !total_seats?.includes(item)));\r\n//   const amount = (((parseFloat(current_vehicle?.price_per_trip?.$numberDecimal)) / (total_seats?.length)) + 300)\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"mx-auto flex flex-col lg:flex-row gap-8 p-4 w-full max-w-7xl\">\r\n\r\n//         <div className=\"w-full lg:w-2/3 bg-white shadow-md rounded-lg overflow-hidden order-2 lg:order-1\">\r\n//           <div>\r\n//             <div\r\n//               key={current_vehicle._id}\r\n//               className=\"bg-white rounded-lg shadow-md p-4 mb-4 flex flex-col lg:flex-row gap-4\"\r\n//             >\r\n//               <img\r\n//                 src={Gwagon}\r\n//                 alt={current_vehicle?.brand_and_model_name}\r\n//                 className=\"w-full lg:w-1/3 object-cover rounded-lg\"\r\n//               />\r\n//               <div className=\"flex flex-col lg:flex-row justify-between w-full\">\r\n//                 <div className=\"flex-grow\">\r\n//                   <h3 className=\"text-xl font-bold\">{current_vehicle?.brand_and_model_name}</h3>\r\n//                   <p className=\"text-gray-900 mb-2\">{current_vehicle?.seats?.length} Seater</p>\r\n//                   <ul className=\"text-gray-700 text-sm mb-4\">\r\n//                     {current_vehicle?.features?.map((feature, index) => (\r\n//                       <li key={index}>• {feature}</li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </div>\r\n\r\n//                 <div className=\"flex flex-col items-center justify-center text-center\">\r\n//                   <h1 className=\"text-lg font-semibold\">{current_vehicle?.Date}</h1>\r\n//                   <h4 className=\"text-gray-600\">{current_vehicle?.time}</h4>\r\n//                 </div>\r\n//                 <div className=\"flex flex-col items-center justify-between text-center\">\r\n//                   <p className=\"text-gray-900 mt-5 font-bold\">Seats Left: {difference?.length}</p>\r\n//                   <p className=\"text-2xl sm:text-3xl font-bold text-blue-600\">₹{amount}/seat</p>\r\n\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"p-4\">\r\n//             <div className=\"w-full max-w-3xl mx-auto mt-10 order-2 lg:order-1\">\r\n//               <form onSubmit={handleSubmit} className=\"bg-gray-50 p-4 md:p-8 shadow-lg rounded-lg\">\r\n//                 <h2 className=\"text-xl md:text-2xl font-semibold text-center text-gray-900 mb-6\">Passenger Details</h2>\r\n\r\n\r\n//                 <div\r\n//                   className={`grid gap-6 ${selectedSeats.length === 1 ? \"grid-cols-1\" : \"grid-cols-1 md:grid-cols-2\"}`}\r\n//                 >\r\n//                   {Object.entries(passengers).map(([seatId, passenger], index) => (\r\n//                     <div key={seatId} className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\r\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat {seatId}</h3>\r\n\r\n\r\n//                       <div>\r\n//                         <label htmlFor={`name-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\r\n//                           Name\r\n//                         </label>\r\n//                         <input\r\n//                           type=\"text\"\r\n//                           id={`name-${seatId}`}\r\n//                           value={passenger.name}\r\n//                           onChange={(e) =>\r\n//                             setPassengers((prev) => ({\r\n//                               ...prev,\r\n//                               [seatId]: { ...prev[seatId], name: e.target.value },\r\n//                             }))\r\n//                           }\r\n//                           required\r\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                         />\r\n//                       </div>\r\n//                       <div>\r\n//                         <label className=\"flex items-center\">\r\n//                           <input\r\n//                             type=\"checkbox\"\r\n//                             checked={mainPassenger === seatId}\r\n//                             onChange={() => handleMainPassengerChange(seatId)}\r\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\"\r\n//                           />\r\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\r\n//                         </label>\r\n//                       </div>\r\n\r\n//                       {mainPassenger === seatId && (\r\n//                         <div className=\"space-y-4\">\r\n\r\n//                           <div className=\"flex flex-col sm:flex-row gap-4\">\r\n\r\n//                             <div className=\"flex-1\">\r\n//                               <label htmlFor={`email-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Email\r\n//                               </label>\r\n//                               <input\r\n//                                 type=\"email\"\r\n//                                 id={`email-${seatId}`}\r\n//                                 value={passenger.email}\r\n//                                 onChange={(e) =>\r\n//                                   setPassengers((prev) => ({\r\n//                                     ...prev,\r\n//                                     [seatId]: { ...prev[seatId], email: e.target.value },\r\n//                                   }))\r\n//                                 }\r\n//                                 required\r\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                               />\r\n//                             </div>\r\n\r\n//                             {/* Phone */}\r\n//                             <div className=\"flex-1\">\r\n//                               <label htmlFor={`phone-${seatId}`} className=\"block text-sm font-medium text-gray-700\">\r\n//                                 Phone Number\r\n//                               </label>\r\n//                               <input\r\n//                                 type=\"tel\"\r\n//                                 id={`phone-${seatId}`}\r\n//                                 value={passenger.phone}\r\n//                                 onChange={(e) =>\r\n//                                   setPassengers((prev) => ({\r\n//                                     ...prev,\r\n//                                     [seatId]: { ...prev[seatId], phone: e.target.value },\r\n//                                   }))\r\n//                                 }\r\n//                                 required\r\n//                                 className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                               />\r\n//                             </div>\r\n//                           </div>\r\n//                         </div>\r\n//                       )}\r\n\r\n//                       {/* Gender Selection */}\r\n//                       <div>\r\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\r\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\r\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\r\n//                             <label key={gender} className=\"flex items-center\">\r\n//                               <input\r\n//                                 type=\"radio\"\r\n//                                 name={`gender-${seatId}`}\r\n//                                 value={gender}\r\n//                                 checked={passenger.gender === gender}\r\n//                                 onChange={(e) =>\r\n//                                   setPassengers((prev) => ({\r\n//                                     ...prev,\r\n//                                     [seatId]: { ...prev[seatId], gender: e.target.value },\r\n//                                   }))\r\n//                                 }\r\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\r\n//                               />\r\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\r\n//                             </label>\r\n//                           ))}\r\n//                         </div>\r\n//                         {passenger.gender === \"Other\" && (\r\n//                           <input\r\n//                             type=\"text\"\r\n//                             placeholder=\"Enter your gender\"\r\n//                             value={passenger.customGender || \"\"}\r\n//                             onChange={(e) =>\r\n//                               setPassengers((prev) => ({\r\n//                                 ...prev,\r\n//                                 [seatId]: { ...prev[seatId], customGender: e.target.value },\r\n//                               }))\r\n//                             }\r\n//                             className=\"mt-2 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                           />\r\n//                         )}\r\n//                       </div>\r\n\r\n\r\n//                     </div>\r\n//                   ))}\r\n//                 </div>\r\n\r\n//                 {/* Error Message */}\r\n//                 {error && <div className=\"text-red-500 text-center mt-4\">{error}</div>}\r\n\r\n//                 {/* No Seats Selected Message */}\r\n//                 {selectedSeats.length === 0 && (\r\n//                   <div className=\"bg-yellow-100 border-l-4 border-yellow-400 text-yellow-700 p-3 rounded-lg shadow-md mt-4\">\r\n//                     <p className=\"font-semibold text-center text-lg mb-2\">No seats selected!</p>\r\n//                     <p className=\"text-center text-sm mb-3\">Please select seats for the trip before proceeding.</p>\r\n//                     <div className=\"bg-white p-4 md:p-6 rounded-md shadow-sm border space-y-4 flex flex-col\">\r\n//                       <h3 className=\"text-lg font-medium text-gray-800\">Passenger for Seat </h3>\r\n\r\n//                       {/* Passenger Name */}\r\n//                       <div>\r\n//                         <label className=\"block text-sm font-medium text-gray-700\">\r\n//                           Name\r\n//                         </label>\r\n//                         <input\r\n//                           type=\"text\"\r\n\r\n//                           disabled\r\n//                           className=\"mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 px-3 py-2\"\r\n//                         />\r\n//                       </div>\r\n//                       {/* Main Passenger Checkbox */}\r\n//                       <div>\r\n//                         <label className=\"flex items-center\">\r\n//                           <input\r\n//                             type=\"checkbox\"\r\n//                             className=\"form-checkbox h-5 w-5 text-blue-600\" disabled\r\n//                           />\r\n//                           <span className=\"ml-2 text-sm text-gray-700\">Set as Main Passenger</span>\r\n//                         </label>\r\n//                       </div>\r\n\r\n//                       {/* Gender Selection */}\r\n//                       <div>\r\n//                         <label className=\"block text-sm font-medium text-gray-700\">Gender</label>\r\n//                         <div className=\"flex flex-wrap items-center gap-4 mt-2\">\r\n//                           {[\"Male\", \"Female\", \"Other\", \"Prefer not to say\"].map((gender) => (\r\n//                             <label className=\"flex items-center\">\r\n//                               <input\r\n//                                 type=\"radio\"\r\n//                                 disabled\r\n//                                 value={gender}\r\n\r\n//                                 className=\"form-radio h-4 w-4 text-blue-600\"\r\n//                               />\r\n//                               <span className=\"ml-2 text-sm text-gray-700\">{gender}</span>\r\n//                             </label>\r\n//                           ))}\r\n//                         </div>\r\n\r\n//                       </div>\r\n\r\n\r\n\r\n\r\n\r\n//                     </div>\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 {/* Submit Button */}\r\n//                 <div className=\"text-center mt-8\">\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     disabled={selectedSeats.length === 0}\r\n//                     className={`px-6 py-3 text-sm font-medium rounded-md shadow ${selectedSeats.length === 0\r\n//                       ? \"bg-gray-200 text-gray-500 cursor-not-allowed\"\r\n//                       : \"bg-blue-600 text-white hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n//                       }`}\r\n//                   >\r\n//                     Book Seats\r\n//                   </button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n\r\n//         <div className=\"w-full lg:w-1/3 mt-8 lg:mt-0 order-1 lg:order-2\">\r\n//           <div className=\"w-full max-w-md mx-auto\">\r\n//             {console.log(\"remaining no of seats\", difference?.length)}\r\n//             <TripDetailsCard />\r\n//           </div>\r\n//           <div className=\"w-full max-w-md mx-auto bg-white shadow-md rounded-lg overflow-hidden mt-8\">\r\n//             <div className=\"bg-sky-100 px-4 py-2\">\r\n//               <h2 className=\"text-lg font-semibold\">Select Seats</h2>\r\n//               <h2>Hurry Up ! Only {difference?.length} seats Remaining</h2>\r\n//             </div>\r\n//             <div className=\"p-4\">\r\n//               <div className=\"grid grid-cols-2 gap-4\">\r\n//                 {seats.map((seat) => (\r\n//                   <div key={seat.id} className=\"flex flex-col items-center\">\r\n//                     <button\r\n//                       onClick={() => !seat.isDisabled && !seat.isBooked && handleSeatClick(seat.id)}\r\n//                       className={`h-12 w-12 rounded-md flex items-center justify-center text-lg font-semibold ${seat.isSelected\r\n//                         ? \"bg-blue-600 text-white\"\r\n//                         : seat.isBooked\r\n//                           ? \"bg-red-600 text-white\"\r\n//                           : \"bg-white text-blue-600 border-2 border-blue-600\"\r\n//                         } ${seat.isDisabled || seat.isBooked\r\n//                           ? \"opacity-50 cursor-not-allowed\"\r\n//                           : \"hover:bg-blue-100\"\r\n//                         }`}\r\n//                       disabled={seat.isDisabled || seat.isBooked}\r\n//                     >\r\n//                       {seat.id}\r\n//                     </button>\r\n//                     {!seat.isBooked && !seat.isDisabled && (\r\n//                       <span className=\"mt-2 text-sm text-gray-600\">Rs. {seat.price}</span>\r\n//                     )}\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n\r\n//         {showModal && (\r\n//           <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\r\n//             <div className=\"bg-white w-full max-w-3xl rounded-xl shadow-2xl p-4 sm:p-8 relative animate-fade-in overflow-y-auto max-h-[90vh]\">\r\n\r\n//               <button\r\n//                 onClick={closeModal}\r\n//                 className=\"absolute top-3 right-3 text-gray-700 hover:text-gray-900 bg-gray-200 rounded-full p-2 shadow transition hover:scale-110\"\r\n//               >\r\n//                 &times;\r\n//               </button>\r\n\r\n//               <h3 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-6 border-b pb-2\">Booking Details</h3>\r\n\r\n\r\n//               {mainPassenger && passengers[mainPassenger] && (\r\n//                 <div className=\"bg-gray-100 p-4 rounded-md mb-6\">\r\n//                   <h4 className=\"text-lg sm:text-xl font-semibold text-gray-700 mb-3\">Main Passenger Details</h4>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Name:</span> {passengers[mainPassenger].name}\r\n//                   </p>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Gender:</span>{\" \"}\r\n//                     {passengers[mainPassenger].gender === \"Other\"\r\n//                       ? passengers[mainPassenger].customGender\r\n//                       : passengers[mainPassenger].gender}\r\n//                   </p>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Email:</span> {passengers[mainPassenger].email}\r\n//                   </p>\r\n//                   <p className=\"text-gray-600\">\r\n//                     <span className=\"font-semibold\">Phone:</span> {passengers[mainPassenger].phone}\r\n//                   </p>\r\n//                 </div>\r\n//               )}\r\n\r\n\r\n//               {Object.entries(passengers)\r\n//                 .filter(([seatId]) => seatId !== mainPassenger)\r\n//                 .map(([seatId, passenger]) => (\r\n//                   <div key={seatId} className=\"bg-gray-50 p-4 rounded-md mb-4\">\r\n//                     <h4 className=\"text-md sm:text-lg font-semibold text-gray-700 mb-2\">Passenger for Seat {seatId}</h4>\r\n//                     <p className=\"text-gray-600\">\r\n//                       <span className=\"font-semibold\">Name:</span> {passenger.name || \"N/A\"}\r\n//                     </p>\r\n//                     <p className=\"text-gray-600\">\r\n//                       <span className=\"font-semibold\">Gender:</span>{\" \"}\r\n//                       {passenger.gender === \"Other\" ? passenger.customGender : passenger.gender}\r\n//                     </p>\r\n//                   </div>\r\n//                 ))}\r\n\r\n//               <div className=\"space-y-3\">\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">From Location:</span> Delhi\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">To Location:</span> Mumbai\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Pickup Location:</span> Rajiv Chowk\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Drop Location:</span> Andheri West\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Date of Trip:</span> {new Date().toLocaleDateString()}\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span className=\"font-semibold\">Seats Booked:</span> {selectedSeats.map((seat) => seat.id).join(\", \")}\r\n//                 </p>\r\n//                 <p className=\"text-gray-600 text-lg font-medium\">\r\n//                   <span className=\"font-semibold\">Total Amount :</span> Rs. {totalAmount}\r\n//                 </p>\r\n//               </div>\r\n\r\n\r\n//               <div className=\"flex justify-center mt-6\">\r\n//                 <button\r\n//                   onClick={handlePayment}\r\n//                   className=\"py-2 px-4 bg-blue-600 text-white text-base font-medium rounded-md shadow hover:bg-blue-700 transition duration-300\"\r\n//                 >\r\n//                   <Link to=\"/sharedcabbookingconfirmed\">Pay Now</Link>\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SeatList;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}